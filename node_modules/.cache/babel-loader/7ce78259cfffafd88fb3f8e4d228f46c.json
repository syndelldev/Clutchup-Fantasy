{"ast":null,"code":"var _jsxFileName = \"D:\\\\Clutchup-Fantasy\\\\Clutchup-Fantasy\\\\src\\\\components\\\\pages\\\\Registrationscreen.js\";\nimport \"./Style.css\";\nimport React, { useState, useEffect } from \"react\";\nimport BackgroundImage from \"../../images/Left.png\";\nimport logoimages from \"../../images/logo_1.png\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { supabase } from \"../../supabaseClient\";\nimport Visibility from \"@material-ui/icons/VisibilityOffOutlined\";\nimport VisibilityOff from \"@material-ui/icons/VisibilityOutlined\";\nimport Conformpopup from \"./Conformpopup.js\";\nimport { el } from \"date-fns/locale\";\nimport { faL } from \"@fortawesome/free-solid-svg-icons\";\nexport default function () {\n  const history = useHistory();\n  const location = useLocation();\n  console.log(location);\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [emailblank, setemailblank] = useState(false);\n  const [Passwordblank, setPasswordblank] = useState(false);\n  const [Cpasswordblank, setCpasswordblank] = useState(false);\n  const [Passwordlangh, setPasswordlangh] = useState(false);\n  const [isValidEmail, setIsValidEmail] = useState(false);\n  const [isValidPassword, setIsValidPassword] = useState(false);\n  const [isValidConfirmPassword, setIsValidConfirmPassword] = useState(false);\n  const [isEmailExits, setIsEmailExtis] = useState(false);\n  const [isTeamscondition, setIsTeamsCondition] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [checked, setChecked] = useState(false);\n  const {\n    selectedData,\n    username,\n    teamname\n  } = location.state;\n  const [conformPopup, setConformpopup] = useState(false);\n  const userInput = {\n    isPasswordOk: false,\n    isEmailOk: false,\n    isConfirmPasswordOk: false\n  };\n  useEffect(() => {\n    setLoading(true);\n    setTimeout(() => {\n      setLoading(false);\n    }, 1000);\n  }, []); // ------------------get user email input -----------------------\n\n  const getEmail = e => {\n    const {\n      value\n    } = e.target;\n\n    if (value === \" \") {\n      setIsValidEmail(false);\n      return;\n    } else {\n      setEmail(e.target.value);\n      setemailblank(false);\n    }\n  }; // --------------------get user password input ---------------------------\n\n\n  const getPassword = e => {\n    const {\n      value\n    } = e.target;\n\n    if (value === \" \") {\n      return;\n    } else {\n      setPassword(e.target.value);\n      setPasswordblank(false);\n    }\n  }; // -----------------get conf pass from user input -----------------\n\n\n  const getConfirmPassword = e => {\n    const {\n      value\n    } = e.target;\n\n    if (value === \" \") {\n      return;\n    } else {\n      setConfirmPassword(e.target.value);\n      setCpasswordblank(false);\n    }\n  };\n\n  const handleLogin = async () => {\n    if (email.trim().length === 0 && password.trim().length === 0 && confirmPassword.trim().length === 0 && checked === false) {\n      setemailblank(true);\n      setPasswordblank(true);\n      setCpasswordblank(true);\n      setIsTeamsCondition(true);\n    } else {\n      if (email.trim().length !== 0) {\n        setemailblank(false);\n\n        if (password.trim().length !== 0) {\n          setPasswordblank(false);\n\n          if (confirmPassword.trim().length !== 0) {\n            setCpasswordblank(false);\n\n            if (checked === true) {\n              setPasswordblank(false);\n              setemailblank(false);\n              setCpasswordblank(false);\n              setIsTeamsCondition(false);\n\n              if (/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{3,4}$/i.test(email)) {\n                userInput.isEmailOk = true;\n                setIsValidEmail(false); // ------------password validation--------------\n\n                if (/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$#!%*?&])[A-Za-z\\d@$!%#*?&]{8,}$/.test(password)) {\n                  userInput.isPasswordOk = true;\n                  setIsValidPassword(false);\n\n                  if (password.length < 7) {\n                    setPasswordlangh(true);\n                  } else {\n                    setPasswordlangh(false);\n\n                    if (password === confirmPassword) {\n                      userInput.isConfirmPasswordOk = true;\n                      setIsValidConfirmPassword(false);\n\n                      if (checked === true) {\n                        setIsTeamsCondition(false);\n\n                        if (userInput.isEmailOk && userInput.isConfirmPasswordOk && userInput.isPasswordOk === true) {\n                          const selectData = await supabase.from(\"user\").select().match({\n                            email: email\n                          });\n                          console.log(selectData);\n\n                          if (selectData.data.length !== 0) {\n                            setIsEmailExtis(true);\n                          } else {\n                            setIsEmailExtis(false);\n                            const {\n                              data,\n                              error\n                            } = await supabase.auth.signUp({\n                              email: email,\n                              password: password\n                            });\n\n                            if (!error) {\n                              const upsertData = selectedData.forEach(async sa => await supabase.from(\"selectedteam\").insert({\n                                playername: sa.playername,\n                                price: sa.price,\n                                pointsearend: sa.pointsearend,\n                                username: username,\n                                teamname: teamname,\n                                playerid: sa.id,\n                                email: email\n                              })); // const { selectedteamdata, selectedteamerror } = await supabase\n                              // .from(\"selectedteam\")\n                              // .update({\n                              //   email: email,\n                              // })\n                              // .eq(\"username\", username)\n                              // .select();\n\n                              const {\n                                userData,\n                                userError\n                              } = await supabase.from(\"user\").update({\n                                email: email\n                              }).eq(\"teamusername\", username).select();\n                              console.log(userData);\n                              const userDetails = {\n                                username: username,\n                                teamname: teamname,\n                                email: email\n                              };\n\n                              if (checked == true) {\n                                history.push({\n                                  pathname: \"/WelcomesScreen/\",\n                                  state: userDetails\n                                });\n                              } else {\n                                setIsTeamsCondition(true);\n                              } //setConformpopup(true);\n\n                            }\n                          }\n                        }\n                      } else {\n                        setIsTeamsCondition(true);\n                      }\n                    } else {\n                      setIsValidConfirmPassword(true);\n                    }\n                  }\n                } else {\n                  setIsValidPassword(true);\n                }\n              } else {\n                setIsValidEmail(true);\n              }\n            } else {\n              setPasswordblank(false);\n              setemailblank(false);\n              setCpasswordblank(false);\n              setIsTeamsCondition(true);\n              console.log(\"check\", true);\n            }\n          } else {\n            setPasswordblank(false);\n            setemailblank(false);\n            setCpasswordblank(true);\n            setIsTeamsCondition(true);\n          }\n        } else {\n          if (confirmPassword.trim().length !== 0) {\n            setCpasswordblank(false);\n            console.log(\"file\", true);\n\n            if (checked === true) {\n              setPasswordblank(false);\n              setemailblank(false);\n              setCpasswordblank(false);\n              setIsTeamsCondition(false);\n\n              if (/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{3,4}$/i.test(email)) {\n                userInput.isEmailOk = true;\n                setIsValidEmail(false); // ------------password validation--------------\n\n                if (/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$#!%*?&])[A-Za-z\\d@$!%#*?&]{8,}$/.test(password)) {\n                  userInput.isPasswordOk = true;\n                  setIsValidPassword(false);\n\n                  if (password.length < 7) {\n                    setPasswordlangh(true);\n                  } else {\n                    setPasswordlangh(false);\n\n                    if (password === confirmPassword) {\n                      userInput.isConfirmPasswordOk = true;\n                      setIsValidConfirmPassword(false);\n\n                      if (checked === true) {\n                        setIsTeamsCondition(false);\n\n                        if (userInput.isEmailOk && userInput.isConfirmPasswordOk && userInput.isPasswordOk === true) {\n                          const selectData = await supabase.from(\"user\").select().match({\n                            email: email\n                          });\n                          console.log(selectData);\n\n                          if (selectData.data.length !== 0) {\n                            setIsEmailExtis(true);\n                          } else {\n                            setIsEmailExtis(false);\n                            const {\n                              data,\n                              error\n                            } = await supabase.auth.signUp({\n                              email: email,\n                              password: password\n                            });\n\n                            if (!error) {\n                              const upsertData = selectedData.forEach(async sa => await supabase.from(\"selectedteam\").insert({\n                                playername: sa.playername,\n                                price: sa.price,\n                                pointsearend: sa.pointsearend,\n                                username: username,\n                                teamname: teamname,\n                                playerid: sa.id,\n                                email: email\n                              })); // const { selectedteamdata, selectedteamerror } = await supabase\n                              // .from(\"selectedteam\")\n                              // .update({\n                              //   email: email,\n                              // })\n                              // .eq(\"username\", username)\n                              // .select();\n\n                              const {\n                                userData,\n                                userError\n                              } = await supabase.from(\"user\").update({\n                                email: email\n                              }).eq(\"teamusername\", username).select();\n                              console.log(userData);\n                              const userDetails = {\n                                username: username,\n                                teamname: teamname,\n                                email: email\n                              };\n\n                              if (checked == true) {\n                                history.push({\n                                  pathname: \"/WelcomesScreen/\",\n                                  state: userDetails\n                                });\n                              } else {\n                                setIsTeamsCondition(true);\n                              } //setConformpopup(true);\n\n                            }\n                          }\n                        }\n                      } else {\n                        setIsTeamsCondition(true);\n                      }\n                    } else {\n                      setIsValidConfirmPassword(true);\n                    }\n                  }\n                } else {\n                  setIsValidPassword(true);\n                }\n              } else {\n                setIsValidEmail(true);\n              }\n            } else {\n              setPasswordblank(false);\n              setemailblank(false);\n              setCpasswordblank(false);\n              setIsTeamsCondition(true);\n              console.log(\"check\", true);\n            }\n          } else {\n            setPasswordblank(true);\n            setemailblank(false);\n            setCpasswordblank(true);\n            setIsTeamsCondition(true);\n          }\n        }\n      } else {\n        setemailblank(true);\n        setPasswordblank(false);\n        setCpasswordblank(false);\n        setIsTeamsCondition(false);\n        setIsValidConfirmPassword(false);\n      }\n    }\n  }; // --------------------------------terms and conditions-----------------------------------\n\n\n  const enableCreateTeam = e => {\n    if (e.target.checked) {\n      console.log(\"chefcj\", e.target.checked);\n      setChecked(true);\n    } else {\n      console.log(\"chefcj\", e.target.checked);\n      setChecked(false);\n    }\n  }; // ------------------------------------- password show & hide ---------------------------\n\n\n  const [values, setValues] = React.useState({\n    password: \"\",\n    showPassword: false\n  });\n\n  const passwordhandleClickShowPassword = () => {\n    setValues({ ...values,\n      showPassword: !values.showPassword\n    });\n  };\n\n  const CpasswordhandleClickShowPassword = () => {\n    setValues({ ...values,\n      CshowPassword: !values.CshowPassword\n    });\n  };\n\n  const handleMouseDownPassword = event => {\n    event.preventDefault();\n  };\n\n  return (\n    /*#__PURE__*/\n    // ========================================== ui part start==============================\n    React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 7\n      }\n    }, loading ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"loader-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"spinner\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"img\", {\n      src: logoimages,\n      style: {\n        width: 100,\n        height: 100\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 13\n      }\n    })) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: BackgroundImage,\n      className: \"mainimg\",\n      alt: \"back-image\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"contener\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: logoimages,\n      className: \"logo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"rghading \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 19\n      }\n    }, \"Create Account\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-outline\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"user-input-wrp inputssize\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      onChange: getEmail,\n      value: email,\n      autocomplete: \"off\",\n      autocorrect: \"off\",\n      type: \"text\",\n      className: \"inputText\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"floating-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 23\n      }\n    }, \"EMAIL\"), isEmailExits && /*#__PURE__*/React.createElement(\"small\", {\n      className: \"d-block mb-1 red\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 25\n      }\n    }, \"Email is already registered.\"), isValidEmail && /*#__PURE__*/React.createElement(\"small\", {\n      className: \"d-block mb-1 red\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 25\n      }\n    }, \"Please enter valid email address.\"), emailblank && /*#__PURE__*/React.createElement(\"small\", {\n      className: \"d-block mb-1 red\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 25\n      }\n    }, \"Please enter email address.\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"user-input-wrp inputssize\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: values.showPassword ? \"text\" : \"password\",\n      onChange: getPassword,\n      autocomplete: \"off\",\n      autocorrect: \"off\",\n      className: \"inputText\",\n      maxLength: \"20\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(\"svg\", {\n      xmlns: \"http://www.w3.org/2000/svg\",\n      width: \"25\",\n      height: \"20\",\n      color: \"#757575\",\n      className: \"bi bi-eye\",\n      onClick: passwordhandleClickShowPassword,\n      onMouseDown: handleMouseDownPassword,\n      \"aria-hidden\": \"true\",\n      viewBox: \"0 0 16 16\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 23\n      }\n    }, values.showPassword ? /*#__PURE__*/React.createElement(Visibility, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 27\n      }\n    }) : /*#__PURE__*/React.createElement(VisibilityOff, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 27\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"floating-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 23\n      }\n    }, \"PASSWORD\"), isValidPassword && /*#__PURE__*/React.createElement(\"small\", {\n      className: \"d-block mb-1 red\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 25\n      }\n    }, \"One uppercase, one lowercase, one number & one special character\"), Passwordblank && /*#__PURE__*/React.createElement(\"small\", {\n      className: \"d-block mb-1 red\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 25\n      }\n    }, \"Please enter password.\"), Passwordlangh && /*#__PURE__*/React.createElement(\"small\", {\n      className: \"d-block mb-1 red\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 25\n      }\n    }, \"Minimum 8 char required.\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"user-input-wrp inputssize\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 459,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: values.CshowPassword ? \"text\" : \"password\",\n      onChange: getConfirmPassword,\n      autocomplete: \"off\",\n      autocorrect: \"off\",\n      className: \"inputText\",\n      maxLength: \"20\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(\"svg\", {\n      xmlns: \"http://www.w3.org/2000/svg\",\n      width: \"25\",\n      height: \"20\",\n      color: \"#757575\",\n      className: \"bi bi-eye\",\n      onClick: CpasswordhandleClickShowPassword,\n      onMouseDown: handleMouseDownPassword,\n      \"aria-hidden\": \"true\",\n      viewBox: \"0 0 16 16\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 23\n      }\n    }, values.CshowPassword ? /*#__PURE__*/React.createElement(Visibility, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 482,\n        columnNumber: 27\n      }\n    }) : /*#__PURE__*/React.createElement(VisibilityOff, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 484,\n        columnNumber: 27\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"floating-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 487,\n        columnNumber: 23\n      }\n    }, \"CONFIRM PASSWORD\"), isValidConfirmPassword && /*#__PURE__*/React.createElement(\"small\", {\n      className: \"d-block mb-1 red\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 489,\n        columnNumber: 25\n      }\n    }, \"Password does not match.\"), \" \", Cpasswordblank && /*#__PURE__*/React.createElement(\"small\", {\n      className: \"d-block mb-1 red\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 494,\n        columnNumber: 25\n      }\n    }, \"Please enter confirm password.\"))), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      width: 20,\n      height: 20,\n      id: \"agree\",\n      name: \"agree\",\n      value: \"yes\",\n      onClick: enableCreateTeam,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 501,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"agree\",\n      className: \"TermsandConditions\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 511,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        textAlign: \"left\",\n        paddingLeft: 8,\n        cursor: \"pointer\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 512,\n        columnNumber: 21\n      }\n    }, \"By creating an account, you agree to our\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 519,\n        columnNumber: 63\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: \"#251F2B\",\n        marginLeft: \"auto\",\n        cursor: \"pointer\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 520,\n        columnNumber: 23\n      }\n    }, \"Terms\"), \" \", \"and\", /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: \"#251F2B\",\n        cursor: \"pointer\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 530,\n        columnNumber: 23\n      }\n    }, \"Conditions\"))), isTeamscondition && /*#__PURE__*/React.createElement(\"small\", {\n      className: \"d-block mb-1 red\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 536,\n        columnNumber: 21\n      }\n    }, \"Please accept terms and conditions to proceed.\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"btnrg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 540,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"button\",\n      type: \"submit\",\n      name: \"submit\",\n      value: \"Submit\",\n      onClick: handleLogin,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 541,\n        columnNumber: 21\n      }\n    }, \"Create Account\"))))))), conformPopup && /*#__PURE__*/React.createElement(Conformpopup, {\n      email: email,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 557,\n        columnNumber: 24\n      }\n    }))\n  );\n}","map":{"version":3,"names":["React","useState","useEffect","BackgroundImage","logoimages","useHistory","useLocation","supabase","Visibility","VisibilityOff","Conformpopup","el","faL","history","location","console","log","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","emailblank","setemailblank","Passwordblank","setPasswordblank","Cpasswordblank","setCpasswordblank","Passwordlangh","setPasswordlangh","isValidEmail","setIsValidEmail","isValidPassword","setIsValidPassword","isValidConfirmPassword","setIsValidConfirmPassword","isEmailExits","setIsEmailExtis","isTeamscondition","setIsTeamsCondition","loading","setLoading","checked","setChecked","selectedData","username","teamname","state","conformPopup","setConformpopup","userInput","isPasswordOk","isEmailOk","isConfirmPasswordOk","setTimeout","getEmail","e","value","target","getPassword","getConfirmPassword","handleLogin","trim","length","test","selectData","from","select","match","data","error","auth","signUp","upsertData","forEach","sa","insert","playername","price","pointsearend","playerid","id","userData","userError","update","eq","userDetails","push","pathname","enableCreateTeam","values","setValues","showPassword","passwordhandleClickShowPassword","CpasswordhandleClickShowPassword","CshowPassword","handleMouseDownPassword","event","preventDefault","width","height","textAlign","paddingLeft","cursor","color","marginLeft"],"sources":["D:/Clutchup-Fantasy/Clutchup-Fantasy/src/components/pages/Registrationscreen.js"],"sourcesContent":["import \"./Style.css\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport BackgroundImage from \"../../images/Left.png\";\r\nimport logoimages from \"../../images/logo_1.png\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport { supabase } from \"../../supabaseClient\";\r\nimport Visibility from \"@material-ui/icons/VisibilityOffOutlined\";\r\nimport VisibilityOff from \"@material-ui/icons/VisibilityOutlined\";\r\nimport Conformpopup from \"./Conformpopup.js\";\r\nimport { el } from \"date-fns/locale\";\r\nimport { faL } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nexport default function () {\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  console.log(location);\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [emailblank, setemailblank] = useState(false);\r\n  const [Passwordblank, setPasswordblank] = useState(false);\r\n  const [Cpasswordblank, setCpasswordblank] = useState(false);\r\n  const [Passwordlangh, setPasswordlangh] = useState(false);\r\n\r\n  const [isValidEmail, setIsValidEmail] = useState(false);\r\n  const [isValidPassword, setIsValidPassword] = useState(false);\r\n  const [isValidConfirmPassword, setIsValidConfirmPassword] = useState(false);\r\n  const [isEmailExits, setIsEmailExtis] = useState(false);\r\n  const [isTeamscondition, setIsTeamsCondition] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [checked, setChecked] = useState(false);\r\n  const {selectedData, username, teamname} = location.state;\r\n  const [conformPopup, setConformpopup] = useState(false);\r\n\r\n  const userInput = {\r\n    isPasswordOk: false,\r\n    isEmailOk: false,\r\n    isConfirmPasswordOk: false,\r\n  };\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    setTimeout(() => {\r\n      setLoading(false);\r\n    }, 1000);\r\n  }, []);\r\n  \r\n  // ------------------get user email input -----------------------\r\n  const getEmail = (e) => {\r\n    const { value } = e.target;\r\n    if (value === \" \") {\r\n      setIsValidEmail(false);\r\n      return;\r\n    } else {\r\n      setEmail(e.target.value);\r\n      setemailblank(false);\r\n    \r\n    }\r\n  };\r\n\r\n  // --------------------get user password input ---------------------------\r\n  const getPassword = (e) => {\r\n    const { value } = e.target;\r\n    if (value === \" \") {\r\n      return;\r\n    } else {\r\n      setPassword(e.target.value);\r\n      setPasswordblank(false);\r\n    }\r\n  };\r\n\r\n  // -----------------get conf pass from user input -----------------\r\n  const getConfirmPassword = (e) => {\r\n    const { value } = e.target;\r\n    if (value === \" \") {\r\n      return;\r\n    } else {\r\n      setConfirmPassword(e.target.value);\r\n      setCpasswordblank(false);\r\n    }\r\n  };\r\n\r\n  const handleLogin = async () => {\r\n    if(email.trim().length === 0 && password.trim().length === 0 && confirmPassword.trim().length === 0 && checked === false){\r\n      setemailblank(true);\r\n      setPasswordblank(true);\r\n      setCpasswordblank(true);\r\n      setIsTeamsCondition(true);\r\n    }else{\r\n      if(email.trim().length !== 0){\r\n        setemailblank(false);\r\n        if(password.trim().length !== 0){\r\n          setPasswordblank(false);\r\n          if(confirmPassword.trim().length !== 0){\r\n            setCpasswordblank(false);\r\n            if(checked === true){\r\n              setPasswordblank(false);\r\n              setemailblank(false);\r\n              setCpasswordblank(false);\r\n              setIsTeamsCondition(false);\r\n              if (/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{3,4}$/i.test(email)) {\r\n                userInput.isEmailOk = true;\r\n                setIsValidEmail(false);\r\n                 // ------------password validation--------------\r\n                  if (/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$#!%*?&])[A-Za-z\\d@$!%#*?&]{8,}$/.test(password)) {\r\n                    userInput.isPasswordOk = true;\r\n                    setIsValidPassword(false);\r\n                    if (password.length < 7) {\r\n                      setPasswordlangh(true);\r\n                    } else {\r\n                      setPasswordlangh(false);\r\n                      if (password === confirmPassword) {\r\n                        userInput.isConfirmPasswordOk = true;\r\n                        setIsValidConfirmPassword(false);\r\n                        if (checked === true) {\r\n                          setIsTeamsCondition(false);\r\n                          if (\r\n                            userInput.isEmailOk &&\r\n                            userInput.isConfirmPasswordOk &&\r\n                            userInput.isPasswordOk === true\r\n                          ) {\r\n                            const selectData = await supabase\r\n                              .from(\"user\")\r\n                              .select()\r\n                              .match({ email: email });\r\n                            console.log(selectData);\r\n                            if (selectData.data.length !== 0) {\r\n                              setIsEmailExtis(true);\r\n                            } else {\r\n                              setIsEmailExtis(false);\r\n                              const { data, error } = await supabase.auth.signUp({\r\n                                email: email,\r\n                                password: password,\r\n                              });\r\n                              if (!error) {\r\n                                const upsertData = selectedData.forEach(async (sa) =>\r\n                  \r\n                                  await supabase.from(\"selectedteam\").insert({\r\n                                    playername: sa.playername,\r\n                                    price: sa.price,\r\n                                    pointsearend: sa.pointsearend,\r\n                                    username: username,\r\n                                    teamname: teamname,\r\n                                    playerid: sa.id,\r\n                                    email: email\r\n                                  })\r\n                                  );\r\n                                // const { selectedteamdata, selectedteamerror } = await supabase\r\n                                // .from(\"selectedteam\")\r\n                                // .update({\r\n                                //   email: email,\r\n                                // })\r\n                                // .eq(\"username\", username)\r\n                                // .select();\r\n                  \r\n                              const { userData, userError } = await supabase\r\n                                .from(\"user\")\r\n                                .update({\r\n                                  email: email,\r\n                                })\r\n                                .eq(\"teamusername\", username)\r\n                                .select();\r\n                              console.log(userData);\r\n                              const userDetails = {\r\n                                username: username,\r\n                                teamname: teamname,\r\n                                email:email\r\n                              }\r\n                              if(checked == true){\r\n                                history.push({\r\n                                  pathname: \"/WelcomesScreen/\",\r\n                                  state: userDetails,\r\n                                });\r\n                              }else{\r\n                                setIsTeamsCondition(true);\r\n                              }\r\n                                //setConformpopup(true);\r\n                               \r\n                              }\r\n                            }\r\n                          }\r\n                        } else {\r\n                          setIsTeamsCondition(true);\r\n                        }\r\n                      } else {\r\n                        setIsValidConfirmPassword(true);\r\n                      }\r\n                    }\r\n                  } else {\r\n                    setIsValidPassword(true);\r\n                  }\r\n              } else {\r\n                setIsValidEmail(true);\r\n              }\r\n            }else{\r\n              setPasswordblank(false);\r\n              setemailblank(false);\r\n              setCpasswordblank(false);\r\n              setIsTeamsCondition(true);\r\n              console.log(\"check\",true);\r\n            }\r\n          }else{\r\n            setPasswordblank(false);\r\n          setemailblank(false);\r\n      setCpasswordblank(true);\r\n      setIsTeamsCondition(true);\r\n          }\r\n        }else{\r\n          if(confirmPassword.trim().length !== 0){\r\n            setCpasswordblank(false);\r\n            console.log(\"file\",true);\r\n            if(checked === true){\r\n              setPasswordblank(false);\r\n              setemailblank(false);\r\n              setCpasswordblank(false);\r\n              setIsTeamsCondition(false);\r\n              if (/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{3,4}$/i.test(email)) {\r\n                userInput.isEmailOk = true;\r\n                setIsValidEmail(false);\r\n                 // ------------password validation--------------\r\n                if (/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$#!%*?&])[A-Za-z\\d@$!%#*?&]{8,}$/.test(password)) {\r\n                    userInput.isPasswordOk = true;\r\n                    setIsValidPassword(false);\r\n                    if (password.length < 7) {\r\n                      setPasswordlangh(true);\r\n                    } else {\r\n                      setPasswordlangh(false);\r\n                      if (password === confirmPassword) {\r\n                        userInput.isConfirmPasswordOk = true;\r\n                        setIsValidConfirmPassword(false);\r\n                        if (checked === true) {\r\n                          setIsTeamsCondition(false);\r\n                          if (\r\n                            userInput.isEmailOk &&\r\n                            userInput.isConfirmPasswordOk &&\r\n                            userInput.isPasswordOk === true\r\n                          ) {\r\n                            const selectData = await supabase\r\n                              .from(\"user\")\r\n                              .select()\r\n                              .match({ email: email });\r\n                            console.log(selectData);\r\n                            if (selectData.data.length !== 0) {\r\n                              setIsEmailExtis(true);\r\n                            } else {\r\n                              setIsEmailExtis(false);\r\n                              const { data, error } = await supabase.auth.signUp({\r\n                                email: email,\r\n                                password: password,\r\n                              });\r\n                              if (!error) {\r\n                                const upsertData = selectedData.forEach(async (sa) =>\r\n                  \r\n                                  await supabase.from(\"selectedteam\").insert({\r\n                                    playername: sa.playername,\r\n                                    price: sa.price,\r\n                                    pointsearend: sa.pointsearend,\r\n                                    username: username,\r\n                                    teamname: teamname,\r\n                                    playerid: sa.id,\r\n                                    email: email\r\n                                  })\r\n                                  );\r\n                                // const { selectedteamdata, selectedteamerror } = await supabase\r\n                                // .from(\"selectedteam\")\r\n                                // .update({\r\n                                //   email: email,\r\n                                // })\r\n                                // .eq(\"username\", username)\r\n                                // .select();\r\n                  \r\n                              const { userData, userError } = await supabase\r\n                                .from(\"user\")\r\n                                .update({\r\n                                  email: email,\r\n                                })\r\n                                .eq(\"teamusername\", username)\r\n                                .select();\r\n                              console.log(userData);\r\n                              const userDetails = {\r\n                                username: username,\r\n                                teamname: teamname,\r\n                                email:email\r\n                              }\r\n                              if(checked == true){\r\n                                history.push({\r\n                                  pathname: \"/WelcomesScreen/\",\r\n                                  state: userDetails,\r\n                                });\r\n                              }else{\r\n                                setIsTeamsCondition(true);\r\n                              }\r\n                                //setConformpopup(true);\r\n                               \r\n                              }\r\n                            }\r\n                          }\r\n                        } else {\r\n                          setIsTeamsCondition(true);\r\n                        }\r\n                      } else {\r\n                        setIsValidConfirmPassword(true);\r\n                      }\r\n                    }\r\n                  } else {\r\n                    setIsValidPassword(true);\r\n                  }\r\n              } else {\r\n                setIsValidEmail(true);\r\n              }\r\n            }else{\r\n              setPasswordblank(false);\r\n              setemailblank(false);\r\n              setCpasswordblank(false);\r\n              setIsTeamsCondition(true);\r\n              console.log(\"check\",true);\r\n            }\r\n          }else{\r\n            setPasswordblank(true);\r\n          setemailblank(false);\r\n      setCpasswordblank(true);\r\n      setIsTeamsCondition(true);\r\n          }\r\n        }\r\n      }else{\r\n        setemailblank(true);\r\n        setPasswordblank(false);\r\n      setCpasswordblank(false);\r\n      setIsTeamsCondition(false);\r\n      setIsValidConfirmPassword(false);\r\n      }\r\n     \r\n    }\r\n  };\r\n\r\n  // --------------------------------terms and conditions-----------------------------------\r\n  const enableCreateTeam = (e) => {\r\n    if (e.target.checked) {\r\n      console.log(\"chefcj\",e.target.checked);\r\n      setChecked(true);\r\n    }else{\r\n      console.log(\"chefcj\",e.target.checked);\r\n      setChecked(false);\r\n    }\r\n  };\r\n\r\n  // ------------------------------------- password show & hide ---------------------------\r\n  const [values, setValues] = React.useState({\r\n    password: \"\",\r\n    showPassword: false,\r\n  });\r\n  const passwordhandleClickShowPassword = () => {\r\n    setValues({ ...values, showPassword: !values.showPassword });\r\n  };\r\n  const CpasswordhandleClickShowPassword = () => {\r\n    setValues({ ...values, CshowPassword: !values.CshowPassword });\r\n  };\r\n\r\n  const handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  return (\r\n  // ========================================== ui part start==============================\r\n    <>\r\n      <div className=\"section\">\r\n        {loading ? (\r\n          <div className=\"loader-container\">\r\n            <div className=\"spinner\"></div>\r\n            <img src={logoimages} style={{ width: 100, height: 100 }} />\r\n          </div>\r\n        ) : (\r\n          <div className=\"Row\">\r\n            <div className=\"col1\">\r\n              <img src={BackgroundImage} className=\"mainimg\" alt=\"back-image\" />\r\n            </div>\r\n            <div className=\"col\">\r\n              <div className=\"contener\">\r\n                <div className=\"d-box\">\r\n                  <img src={logoimages} className=\"logo\" />\r\n                  <h3 className=\"rghading \">Create Account</h3>\r\n                  <div className=\"form-outline\">\r\n                    <div className=\"user-input-wrp inputssize\">\r\n                      <br />\r\n\r\n                      <input\r\n                        onChange={getEmail}\r\n                        value={email}\r\n                        autocomplete=\"off\"\r\n                        autocorrect=\"off\"\r\n                        type=\"text\"\r\n                        className=\"inputText\"\r\n                        required\r\n                      />\r\n                      <span className=\"floating-label\">EMAIL</span>\r\n                      {isEmailExits && (\r\n                        <small className=\"d-block mb-1 red\">\r\n                          Email is already registered.\r\n                        </small>\r\n                      )}\r\n                      {isValidEmail && (\r\n                        <small className=\"d-block mb-1 red\">\r\n                          Please enter valid email address.\r\n                        </small>\r\n                      )}\r\n                      {emailblank && (\r\n                        <small className=\"d-block mb-1 red\">\r\n                          Please enter email address.\r\n                        </small>\r\n                      )}\r\n                    </div>\r\n                    <div className=\"user-input-wrp inputssize\">\r\n                      <br />\r\n                      <input\r\n                        type={values.showPassword ? \"text\" : \"password\"}\r\n                        onChange={getPassword}\r\n                        autocomplete=\"off\"\r\n                        autocorrect=\"off\"\r\n                        className=\"inputText\"\r\n                        maxLength=\"20\"\r\n                        required\r\n                      />\r\n                      <svg\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                        width=\"25\"\r\n                        height=\"20\"\r\n                        color=\"#757575\"\r\n                        className=\"bi bi-eye\"\r\n                        onClick={passwordhandleClickShowPassword}\r\n                        onMouseDown={handleMouseDownPassword}\r\n                        aria-hidden=\"true\"\r\n                        viewBox=\"0 0 16 16\"\r\n                      >\r\n                        {values.showPassword ? (\r\n                          <Visibility />\r\n                        ) : (\r\n                          <VisibilityOff />\r\n                        )}\r\n                      </svg>\r\n                      <span className=\"floating-label\">PASSWORD</span>\r\n                      {isValidPassword && (\r\n                        <small className=\"d-block mb-1 red\">\r\n                          One uppercase, one lowercase, one number & one special\r\n                          character\r\n                        </small>\r\n                      )}\r\n                      {Passwordblank && (\r\n                        <small className=\"d-block mb-1 red\">\r\n                          Please enter password.\r\n                        </small>\r\n                      )}\r\n                      {Passwordlangh && (\r\n                        <small className=\"d-block mb-1 red\">\r\n                           Minimum 8 char required.\r\n                        </small>\r\n                      )}\r\n                    </div>\r\n\r\n                    <div className=\"user-input-wrp inputssize\">\r\n                      <br />\r\n                      <input\r\n                        type={values.CshowPassword ? \"text\" : \"password\"}\r\n                        onChange={getConfirmPassword}\r\n                        autocomplete=\"off\"\r\n                        autocorrect=\"off\"\r\n                        className=\"inputText\"\r\n                        maxLength=\"20\"\r\n                        required\r\n                      />\r\n                      <svg\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                        width=\"25\"\r\n                        height=\"20\"\r\n                        color=\"#757575\"\r\n                        className=\"bi bi-eye\"\r\n                        onClick={CpasswordhandleClickShowPassword}\r\n                        onMouseDown={handleMouseDownPassword}\r\n                        aria-hidden=\"true\"\r\n                        viewBox=\"0 0 16 16\"\r\n                      >\r\n                        {values.CshowPassword ? (\r\n                          <Visibility />\r\n                        ) : (\r\n                          <VisibilityOff />\r\n                        )}\r\n                      </svg>\r\n                      <span className=\"floating-label\">CONFIRM PASSWORD</span>\r\n                      {isValidConfirmPassword && (\r\n                        <small className=\"d-block mb-1 red\">\r\n                          Password does not match.\r\n                        </small>\r\n                      )}{\" \"}\r\n                      {Cpasswordblank && (\r\n                        <small className=\"d-block mb-1 red\">\r\n                          Please enter confirm password.\r\n                        </small>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    \r\n                    width={20}\r\n                    height={20}\r\n                    id=\"agree\"\r\n                    name=\"agree\"\r\n                    value=\"yes\"\r\n                    onClick={enableCreateTeam}\r\n                  />\r\n                  <label htmlFor=\"agree\" className=\"TermsandConditions\">\r\n                    <div\r\n                      style={{\r\n                        textAlign: \"left\",\r\n                        paddingLeft: 8,\r\n                        cursor: \"pointer\",\r\n                      }}\r\n                    >\r\n                      By creating an account, you agree to our<br></br>\r\n                      <span\r\n                        style={{\r\n                          color: \"#251F2B\",\r\n                          marginLeft: \"auto\",\r\n                          cursor: \"pointer\",\r\n                        }}\r\n                      >\r\n                        Terms\r\n                      </span>{\" \"}\r\n                      and\r\n                      <span style={{ color: \"#251F2B\", cursor: \"pointer\" }}>\r\n                        Conditions\r\n                      </span>\r\n                    </div>\r\n                  </label>\r\n                  {isTeamscondition && (\r\n                    <small className=\"d-block mb-1 red\">\r\n                      Please accept terms and conditions to proceed.\r\n                    </small>\r\n                  )}\r\n                  <div className=\"btnrg\">\r\n                    <button\r\n                      className=\"button\"\r\n                      type=\"submit\"\r\n                      name=\"submit\"\r\n                      value=\"Submit\"\r\n                      onClick={handleLogin}\r\n                    >\r\n                      Create Account\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n      {conformPopup && <Conformpopup email={email}/>}\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}