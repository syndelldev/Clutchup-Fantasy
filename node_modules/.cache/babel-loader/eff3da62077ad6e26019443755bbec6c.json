{"ast":null,"code":"/*\n  This file draws heavily from https://github.com/phoenixframework/phoenix/blob/d344ec0a732ab4ee204215b31de69cf4be72e3bf/assets/js/phoenix/presence.js\n  License: https://github.com/phoenixframework/phoenix/blob/d344ec0a732ab4ee204215b31de69cf4be72e3bf/LICENSE.md\n*/\nexport default class RealtimePresence {\n  /**\n   * Initializes the Presence.\n   *\n   * @param channel - The RealtimeChannel\n   * @param opts - The options,\n   *        for example `{events: {state: 'state', diff: 'diff'}}`\n   */\n  constructor(channel, opts) {\n    this.channel = channel;\n    this.state = {};\n    this.pendingDiffs = [];\n    this.joinRef = null;\n    this.caller = {\n      onJoin: () => {},\n      onLeave: () => {},\n      onSync: () => {}\n    };\n    const events = (opts === null || opts === void 0 ? void 0 : opts.events) || {\n      state: 'presence_state',\n      diff: 'presence_diff'\n    };\n    this.channel.on(events.state, {}, newState => {\n      const {\n        onJoin,\n        onLeave,\n        onSync\n      } = this.caller;\n      this.joinRef = this.channel.joinRef();\n      this.state = RealtimePresence.syncState(this.state, newState, onJoin, onLeave);\n      this.pendingDiffs.forEach(diff => {\n        this.state = RealtimePresence.syncDiff(this.state, diff, onJoin, onLeave);\n      });\n      this.pendingDiffs = [];\n      onSync();\n    });\n    this.channel.on(events.diff, {}, diff => {\n      const {\n        onJoin,\n        onLeave,\n        onSync\n      } = this.caller;\n\n      if (this.inPendingSyncState()) {\n        this.pendingDiffs.push(diff);\n      } else {\n        this.state = RealtimePresence.syncDiff(this.state, diff, onJoin, onLeave);\n        onSync();\n      }\n    });\n    this.onJoin((key, currentPresences, newPresences) => {\n      this.channel.trigger('presence', {\n        event: 'join',\n        key,\n        currentPresences,\n        newPresences\n      });\n    });\n    this.onLeave((key, currentPresences, leftPresences) => {\n      this.channel.trigger('presence', {\n        event: 'leave',\n        key,\n        currentPresences,\n        leftPresences\n      });\n    });\n    this.onSync(() => {\n      this.channel.trigger('presence', {\n        event: 'sync'\n      });\n    });\n  }\n  /**\n   * Used to sync the list of presences on the server with the\n   * client's state.\n   *\n   * An optional `onJoin` and `onLeave` callback can be provided to\n   * react to changes in the client's local presences across\n   * disconnects and reconnects with the server.\n   */\n\n\n  static syncState(currentState, newState, onJoin, onLeave) {\n    const state = this.cloneDeep(currentState);\n    const transformedState = this.transformState(newState);\n    const joins = {};\n    const leaves = {};\n    this.map(state, (key, presences) => {\n      if (!transformedState[key]) {\n        leaves[key] = presences;\n      }\n    });\n    this.map(transformedState, (key, newPresences) => {\n      const currentPresences = state[key];\n\n      if (currentPresences) {\n        const newPresenceRefs = newPresences.map(m => m.presence_ref);\n        const curPresenceRefs = currentPresences.map(m => m.presence_ref);\n        const joinedPresences = newPresences.filter(m => curPresenceRefs.indexOf(m.presence_ref) < 0);\n        const leftPresences = currentPresences.filter(m => newPresenceRefs.indexOf(m.presence_ref) < 0);\n\n        if (joinedPresences.length > 0) {\n          joins[key] = joinedPresences;\n        }\n\n        if (leftPresences.length > 0) {\n          leaves[key] = leftPresences;\n        }\n      } else {\n        joins[key] = newPresences;\n      }\n    });\n    return this.syncDiff(state, {\n      joins,\n      leaves\n    }, onJoin, onLeave);\n  }\n  /**\n   * Used to sync a diff of presence join and leave events from the\n   * server, as they happen.\n   *\n   * Like `syncState`, `syncDiff` accepts optional `onJoin` and\n   * `onLeave` callbacks to react to a user joining or leaving from a\n   * device.\n   */\n\n\n  static syncDiff(state, diff, onJoin, onLeave) {\n    const {\n      joins,\n      leaves\n    } = {\n      joins: this.transformState(diff.joins),\n      leaves: this.transformState(diff.leaves)\n    };\n\n    if (!onJoin) {\n      onJoin = () => {};\n    }\n\n    if (!onLeave) {\n      onLeave = () => {};\n    }\n\n    this.map(joins, (key, newPresences) => {\n      var _a;\n\n      const currentPresences = (_a = state[key]) !== null && _a !== void 0 ? _a : [];\n      state[key] = this.cloneDeep(newPresences);\n\n      if (currentPresences.length > 0) {\n        const joinedPresenceRefs = state[key].map(m => m.presence_ref);\n        const curPresences = currentPresences.filter(m => joinedPresenceRefs.indexOf(m.presence_ref) < 0);\n        state[key].unshift(...curPresences);\n      }\n\n      onJoin(key, currentPresences, newPresences);\n    });\n    this.map(leaves, (key, leftPresences) => {\n      let currentPresences = state[key];\n      if (!currentPresences) return;\n      const presenceRefsToRemove = leftPresences.map(m => m.presence_ref);\n      currentPresences = currentPresences.filter(m => presenceRefsToRemove.indexOf(m.presence_ref) < 0);\n      state[key] = currentPresences;\n      onLeave(key, currentPresences, leftPresences);\n      if (currentPresences.length === 0) delete state[key];\n    });\n    return state;\n  }\n  /**\n   * Returns the array of presences, with selected metadata.\n   */\n\n\n  static list(presences, chooser) {\n    if (!chooser) {\n      chooser = (_key, pres) => pres;\n    }\n\n    return this.map(presences, (key, presences) => chooser(key, presences));\n  }\n\n  static map(obj, func) {\n    return Object.getOwnPropertyNames(obj).map(key => func(key, obj[key]));\n  }\n  /**\n   * Remove 'metas' key\n   * Change 'phx_ref' to 'presence_ref'\n   * Remove 'phx_ref' and 'phx_ref_prev'\n   *\n   * @example\n   * // returns {\n   *  abc123: [\n   *    { presence_ref: '2', user_id: 1 },\n   *    { presence_ref: '3', user_id: 2 }\n   *  ]\n   * }\n   * RealtimePresence.transformState({\n   *  abc123: {\n   *    metas: [\n   *      { phx_ref: '2', phx_ref_prev: '1' user_id: 1 },\n   *      { phx_ref: '3', user_id: 2 }\n   *    ]\n   *  }\n   * })\n   */\n\n\n  static transformState(state) {\n    state = this.cloneDeep(state);\n    return Object.getOwnPropertyNames(state).reduce((newState, key) => {\n      const presences = state[key];\n\n      if ('metas' in presences) {\n        newState[key] = presences.metas.map(presence => {\n          presence['presence_ref'] = presence['phx_ref'];\n          delete presence['phx_ref'];\n          delete presence['phx_ref_prev'];\n          return presence;\n        });\n      } else {\n        newState[key] = presences;\n      }\n\n      return newState;\n    }, {});\n  }\n\n  static cloneDeep(obj) {\n    return JSON.parse(JSON.stringify(obj));\n  }\n\n  onJoin(callback) {\n    this.caller.onJoin = callback;\n  }\n\n  onLeave(callback) {\n    this.caller.onLeave = callback;\n  }\n\n  onSync(callback) {\n    this.caller.onSync = callback;\n  }\n\n  list(by) {\n    return RealtimePresence.list(this.state, by);\n  }\n\n  inPendingSyncState() {\n    return !this.joinRef || this.joinRef !== this.channel.joinRef();\n  }\n\n}","map":{"version":3,"mappings":"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","names":["RealtimePresence","constructor","channel","opts","onJoin","onLeave","onSync","events","state","diff","on","newState","caller","joinRef","syncState","pendingDiffs","forEach","syncDiff","inPendingSyncState","push","key","currentPresences","newPresences","trigger","event","leftPresences","currentState","cloneDeep","transformedState","transformState","joins","leaves","map","presences","newPresenceRefs","m","presence_ref","curPresenceRefs","joinedPresences","filter","indexOf","length","_a","joinedPresenceRefs","curPresences","unshift","presenceRefsToRemove","list","chooser","_key","pres","obj","func","Object","getOwnPropertyNames","reduce","metas","presence","JSON","parse","stringify","callback","by"],"sourceRoot":"","sources":["../../src/RealtimePresence.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}