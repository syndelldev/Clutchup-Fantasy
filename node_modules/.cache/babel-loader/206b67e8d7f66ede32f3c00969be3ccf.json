{"ast":null,"code":"var _jsxFileName = \"D:\\\\Clutchup-Fantasy\\\\Clutchup-Fantasy\\\\src\\\\components\\\\pages\\\\NervesLeague.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { supabase } from \"../../supabaseClient\";\nimport logoimages from \"../../images/logo_1.png\";\nimport \"../../assets/css/TeamSelection.css\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { format } from 'date-fns';\nexport default function NervesLeague() {\n  const location = useLocation();\n  const history = useHistory();\n  const [loading, setLoading] = useState(false);\n  const [userActualTeamCode, setUserActualTeamCode] = useState(\"\");\n  const [userActualLeagueName, setUserActualLeagueName] = useState(\"\");\n  const [userStartleagdata, setUserStartleagdata] = useState(\"\");\n  const [userEndleagdata, setUserEndleagdata] = useState(\"\");\n  const [Startleagdata, setStartleagdata] = useState(\"\");\n  const [Endleagdata, setEndleagdata] = useState(\"\");\n  const [StartleagTime, setStartleagTime] = useState(\"\");\n  const [EndleagTime, setEndleagTime] = useState(\"\");\n  const [existLeaguedate, setExistLeagueDate] = useState(false);\n  useEffect(() => {\n    setLoading(true);\n    setTimeout(() => {\n      setLoading(false);\n    }, 1000);\n  }, []);\n  useEffect(() => {\n    fachdata();\n  }, []);\n  var userData = location.state;\n  var email = userData[0].email;\n  console.log(email);\n\n  const fachdata = async () => {\n    console.log(\"email\", email);\n    const {\n      data,\n      error\n    } = await supabase.from(\"createnewleague\").select().eq(\"email\", email);\n    console.log(data[0]);\n\n    if (data.length !== 0) {\n      setUserActualTeamCode(data[0].leaguecode);\n      setUserActualLeagueName(data[0].leaguename);\n      setUserStartleagdata(data[0].leaguestartdate);\n      setUserEndleagdata(data[0].leagueenaddate); // var dataval = format(data[0].leagestartdatetime, 'dd-MM-yyyy h:mm aa');\n      // console.log(dataval);\n\n      var startdatevalu = data[0].leaguestartdate;\n      console.log(data[0].leaguestartdate);\n      var dataval = startdatevalu.split(' ');\n      var startdate = dataval[0];\n      var starttime = dataval[1] + \" \" + dataval[2];\n      console.log(dataval[1] + \" \" + dataval[2]);\n      setStartleagdata(startdate);\n      setStartleagTime(starttime);\n      var enddatevalu = data[0].leagueenaddate;\n      console.log(data[0].leagenddatetime);\n      var dataval2 = enddatevalu.split(' ');\n      var enddate = dataval2[0];\n      var endtime = dataval2[1] + \" \" + dataval2[2];\n      console.log(dataval2[1] + \" \" + dataval2[2]);\n      setEndleagdata(enddate);\n      setEndleagTime(endtime);\n      setExistLeagueDate(true);\n    } else {\n      const {\n        data,\n        error\n      } = await supabase.from(\"user\").select().eq(\"email\", email);\n      console.log(data[0].teamname);\n      setUserActualLeagueName(data[0].teamname);\n      setExistLeagueDate(false);\n    }\n  };\n\n  console.log(location);\n  userData.sort(function (a, b) {\n    return b.pointsearend - a.pointsearend;\n  });\n  const MONTHS = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n  var totalPoints = 0; // var updatedPlayerTotalPoints = [0];\n\n  const [isItNot5PM, setIsItNot5PM] = useState(false);\n  const date = new Date(); // -----------------------------------totaling  total points--------------------------------\n\n  if (userData) {\n    userData.map(player => {\n      totalPoints = totalPoints + Number(player.pointsearend);\n    });\n  } // useEffect(() => {\n  //   getCurrentDate();\n  // }, []);\n  // // ======================= date & time =========================\n  // const getCurrentDate = () => {\n  // };\n  // --------------------------time validation-----------------------------\n\n\n  function formatAMPM(date) {\n    var hours = date.getHours();\n    var minutes = date.getMinutes();\n    var ampm = hours >= 12 ? \"pm\" : \"am\";\n    hours = hours % 12;\n    hours = hours ? hours : 12; // the hour '0' should be '12'\n\n    minutes = minutes < 10 ? \"0\" + minutes : minutes;\n    var strTime = hours + \":\" + minutes + \" \" + ampm;\n    return strTime;\n  } // useEffect(() => {\n  //   //window.location.reload(true);\n  //   console.log(format(new Date(), 'dd/MM/yyyy h:mm aa'));\n  //   var currentdatevalu = format(new Date(), 'dd/MM/yyyy h:mm aa');\n  //   console.log(\"etcgjs\",Startleagdata);\n  //   console.log(\"edvc\",currentdatevalu >= userStartleagdata && Endleagdata <= userEndleagdata);\n  //   if(currentdatevalu >= userStartleagdata && Endleagdata <= userEndleagdata){\n  //     console.log(\"data\",currentdatevalu >= userStartleagdata && Endleagdata <= userEndleagdata);\n  //     setIsItNot5PM(false);\n  //   // if(formatAMPM(new Date()) >= StartleagTime && formatAMPM(new Date()) <= EndleagTime){\n  //   //   console.log(formatAMPM(new Date()));\n  //   //   setIsItNot5PM(false);\n  //   // }else{\n  //   //   //console.log(\"data\",currentdatevalu === Startleagdata);\n  //   //   console.log(formatAMPM(new Date()));\n  //   //   setIsItNot5PM(true);\n  //   // }\n  //   }else{\n  //     //console.log(\"data\",currentdatevalu === Startleagdata);\n  //     console.log(\"data\",\"false\");\n  //     setIsItNot5PM(true);\n  //   }\n  //   // if (formatAMPM(new Date()) !== \"5:00 am\") {\n  //   //   setIsItNot5PM(true);\n  //   // }\n  //   // if (formatAMPM(new Date()) <= \"5:00 pm\") {\n  //   //   setIsItNot5PM(false);\n  //   // }\n  // }, [formatAMPM(new Date())]);\n\n\n  const handleSubmit = async () => {\n    console.log(format(new Date(), 'MM/dd/yyyy h:mm aa'));\n    var currentdatevalu = format(new Date(), 'MM/dd/yyyy h:mm aa');\n    console.log(\"etcgjs\", userStartleagdata);\n    console.log(\"edvc\", currentdatevalu >= userStartleagdata && Endleagdata <= userEndleagdata);\n    const {\n      data,\n      error\n    } = await supabase.from(\"user\").select().eq(\"email\", email);\n\n    if (data[0].Teamcode !== null) {\n      if (currentdatevalu >= userEndleagdata && Endleagdata <= userEndleagdata) {\n        console.log(\"data\", currentdatevalu >= userStartleagdata && Endleagdata <= userEndleagdata);\n        setIsItNot5PM(false); // if(formatAMPM(new Date()) >= StartleagTime && formatAMPM(new Date()) <= EndleagTime){\n        //   console.log(formatAMPM(new Date()));\n        //   setIsItNot5PM(false);\n        // }else{\n        //   //console.log(\"data\",currentdatevalu === Startleagdata);\n        //   console.log(formatAMPM(new Date()));\n        //   setIsItNot5PM(true);\n        // }\n      } else {\n        //console.log(\"data\",currentdatevalu === Startleagdata);\n        console.log(\"data\", \"false\");\n        history.push({\n          pathname: \"/update-player-screen/\",\n          state: userData\n        }); //setIsItNot5PM(true);\n      }\n    } else {\n      history.push({\n        pathname: \"/update-player-screen/\",\n        state: userData\n      });\n    }\n\n    console.log(isItNot5PM); // console.log(format(new Date(), 'dd/MM/yyyy'));\n    // var currentdatevalu = format(new Date(), 'dd/MM/yyyy');\n    // if(currentdatevalu <= Startleagdata){\n    //   console.log(\"data\",currentdatevalu <= Startleagdata);\n    //   if(formatAMPM(new Date()) <= StartleagTime){\n    //     console.log(formatAMPM(new Date()));\n    //     //setIsItNot5PM(false);\n    //   }else{\n    //     console.log(formatAMPM(new Date()));\n    //     history.push({\n    //       pathname: \"/update-player-screen/\",\n    //       state: userData,\n    //     });\n    //   }\n    // }else{\n    //   history.push({\n    //     pathname: \"/update-player-screen/\",\n    //     state: userData,\n    //   });\n    // }\n    // if (isItNot5PM === true) {\n    //   console.log(isItNot5PM);\n    //   history.push({\n    //     pathname: \"/update-player-screen/\",\n    //     state: userData,\n    //   })\n    // }\n  };\n\n  const checkboxInput = {\n    email: userData[0].email\n  };\n\n  const handleHome = async () => {\n    history.push({\n      pathname: \"/landing-screen/\",\n      state: checkboxInput\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"section playerlist-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 5\n    }\n  }, loading ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"loader-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"spinner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    src: logoimages,\n    style: {\n      width: 100,\n      height: 100\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 11\n    }\n  })) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"contenor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"neareleaguecon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \" back-arrow\",\n    style: {\n      marginLeft: 12\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    onClick: () => history.goBack(),\n    className: \"fa fa-arrow-left mt-4\",\n    \"aria-hidden\": \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \" title text-center teamhadding  h-40 mt-3 mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 13\n    }\n  }, \" \", userActualLeagueName)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row top-bar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12 px-4 d-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row table-data w-100 m-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 11\n    }\n  }, existLeaguedate && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"neralartrow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fa fa-exclamation-triangle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"time-part\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 57\n    }\n  }, \"\\xA0Rosters lock at \", EndleagTime, \" EST on \", Endleagdata))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Mgmthadding\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mgmtteam\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 15\n    }\n  }, \"PLAYER\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: \"100%\",\n      textAlign: \"right\",\n      color: \"#757575\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 15\n    }\n  }, \"POINTS\")), userData && userData.map((player, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    id: \"row-data-\" + index,\n    className: \"col-12 table-body px-3 d-flex justify-content-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"selectteamname\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 19\n    }\n  }, player.playername), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"points pe-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 19\n    }\n  }, player.pointsearend))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"nervesrow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"nervesTotal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 15\n    }\n  }, \"Total\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"nervesnum\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 15\n    }\n  }, totalPoints))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row btn-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleSubmit(),\n    className: \"col-12 procced-btn mb-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 13\n    }\n  }, \"Edit Roster\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleHome(),\n    className: \"col-12 procced-btn homebuton\",\n    style: {\n      backgroundColor: 'transparent',\n      color: '#e5007d',\n      border: '1px solid '\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 13\n    }\n  }, \"Home\"))));\n}","map":{"version":3,"names":["React","useEffect","useState","supabase","logoimages","useHistory","useLocation","format","NervesLeague","location","history","loading","setLoading","userActualTeamCode","setUserActualTeamCode","userActualLeagueName","setUserActualLeagueName","userStartleagdata","setUserStartleagdata","userEndleagdata","setUserEndleagdata","Startleagdata","setStartleagdata","Endleagdata","setEndleagdata","StartleagTime","setStartleagTime","EndleagTime","setEndleagTime","existLeaguedate","setExistLeagueDate","setTimeout","fachdata","userData","state","email","console","log","data","error","from","select","eq","length","leaguecode","leaguename","leaguestartdate","leagueenaddate","startdatevalu","dataval","split","startdate","starttime","enddatevalu","leagenddatetime","dataval2","enddate","endtime","teamname","sort","a","b","pointsearend","MONTHS","totalPoints","isItNot5PM","setIsItNot5PM","date","Date","map","player","Number","formatAMPM","hours","getHours","minutes","getMinutes","ampm","strTime","handleSubmit","currentdatevalu","Teamcode","push","pathname","checkboxInput","handleHome","width","height","marginLeft","goBack","textAlign","color","index","playername","backgroundColor","border"],"sources":["D:/Clutchup-Fantasy/Clutchup-Fantasy/src/components/pages/NervesLeague.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { supabase } from \"../../supabaseClient\";\r\nimport logoimages from \"../../images/logo_1.png\";\r\nimport \"../../assets/css/TeamSelection.css\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport { format } from 'date-fns';\r\nexport default function NervesLeague() {\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  const [loading, setLoading] = useState(false);\r\n  const [userActualTeamCode, setUserActualTeamCode] = useState(\"\");\r\n  const [userActualLeagueName, setUserActualLeagueName] = useState(\"\");\r\n  const [userStartleagdata, setUserStartleagdata] = useState(\"\");\r\n  const [userEndleagdata, setUserEndleagdata] = useState(\"\");\r\n  const [Startleagdata, setStartleagdata] = useState(\"\");\r\n  const [Endleagdata, setEndleagdata] = useState(\"\");\r\n  const [StartleagTime, setStartleagTime] = useState(\"\");\r\n  const [EndleagTime, setEndleagTime] = useState(\"\");\r\n  const [existLeaguedate, setExistLeagueDate] = useState(false);\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    setTimeout(() => {\r\n      setLoading(false);\r\n    }, 1000);\r\n  }, []);\r\n  useEffect(() => {\r\n    fachdata();\r\n  }, []);\r\n  var userData = location.state;\r\n  var email = userData[0].email;\r\n  console.log(email);\r\n  \r\n  \r\n  const fachdata = async () => {\r\n    console.log(\"email\",email);\r\n    const { data, error } = await supabase\r\n      .from(\"createnewleague\")\r\n      .select()\r\n      .eq(\"email\", email);\r\n    console.log(data[0]);\r\n    if(data.length !== 0){\r\n      setUserActualTeamCode(data[0].leaguecode);\r\n      setUserActualLeagueName(data[0].leaguename);\r\n      setUserStartleagdata(data[0].leaguestartdate);\r\n      setUserEndleagdata(data[0].leagueenaddate);\r\n      // var dataval = format(data[0].leagestartdatetime, 'dd-MM-yyyy h:mm aa');\r\n      // console.log(dataval);\r\n      var startdatevalu = data[0].leaguestartdate;\r\n      console.log(data[0].leaguestartdate);\r\n      var dataval = startdatevalu.split(' ');\r\n      var startdate = dataval[0];\r\n      var starttime = dataval[1] +\" \" + dataval[2];\r\n      console.log(dataval[1] +\" \" + dataval[2]);\r\n      setStartleagdata(startdate);\r\n      setStartleagTime(starttime);\r\n      var enddatevalu = data[0].leagueenaddate;\r\n      console.log(data[0].leagenddatetime);\r\n      var dataval2 = enddatevalu.split(' ');\r\n      var enddate = dataval2[0];\r\n      var endtime = dataval2[1] +\" \" + dataval2[2];\r\n      console.log(dataval2[1] +\" \" + dataval2[2]);\r\n      setEndleagdata(enddate);\r\n      setEndleagTime(endtime);\r\n      setExistLeagueDate(true);\r\n    }else{\r\n      const { data, error } = await supabase\r\n      .from(\"user\")\r\n      .select()\r\n      .eq(\"email\", email);\r\n      console.log(data[0].teamname);\r\n      setUserActualLeagueName(data[0].teamname);\r\n      setExistLeagueDate(false);\r\n    }\r\n    \r\n  };\r\n  console.log(location);\r\n\r\n \r\n \r\n\r\n  userData.sort(function (a, b) {\r\n    return b.pointsearend - a.pointsearend;\r\n  });\r\n  const MONTHS = [\r\n    \"Jan\",\r\n    \"Feb\",\r\n    \"Mar\",\r\n    \"Apr\",\r\n    \"May\",\r\n    \"Jun\",\r\n    \"Jul\",\r\n    \"Aug\",\r\n    \"Sep\",\r\n    \"Oct\",\r\n    \"Nov\",\r\n    \"Dec\",\r\n  ];\r\n  var totalPoints = 0;\r\n  // var updatedPlayerTotalPoints = [0];\r\n  const [isItNot5PM, setIsItNot5PM] = useState(false);\r\n\r\n  const date = new Date();\r\n\r\n  // -----------------------------------totaling  total points--------------------------------\r\n  if (userData) {\r\n    userData.map((player) => {\r\n      totalPoints = totalPoints + Number(player.pointsearend);\r\n    });\r\n  }\r\n  // useEffect(() => {\r\n  //   getCurrentDate();\r\n  // }, []);\r\n  // // ======================= date & time =========================\r\n  // const getCurrentDate = () => {\r\n   \r\n  // };\r\n\r\n  // --------------------------time validation-----------------------------\r\n  function formatAMPM(date) {\r\n    var hours = date.getHours();\r\n    var minutes = date.getMinutes();\r\n    var ampm = hours >= 12 ? \"pm\" : \"am\";\r\n    hours = hours % 12;\r\n    hours = hours ? hours : 12; // the hour '0' should be '12'\r\n    minutes = minutes < 10 ? \"0\" + minutes : minutes;\r\n    var strTime = hours + \":\" + minutes + \" \" + ampm;\r\n    return strTime;\r\n  }\r\n  // useEffect(() => {\r\n    \r\n  //   //window.location.reload(true);\r\n  //   console.log(format(new Date(), 'dd/MM/yyyy h:mm aa'));\r\n  //   var currentdatevalu = format(new Date(), 'dd/MM/yyyy h:mm aa');\r\n  //   console.log(\"etcgjs\",Startleagdata);\r\n  //   console.log(\"edvc\",currentdatevalu >= userStartleagdata && Endleagdata <= userEndleagdata);\r\n  //   if(currentdatevalu >= userStartleagdata && Endleagdata <= userEndleagdata){\r\n  //     console.log(\"data\",currentdatevalu >= userStartleagdata && Endleagdata <= userEndleagdata);\r\n  //     setIsItNot5PM(false);\r\n  //   // if(formatAMPM(new Date()) >= StartleagTime && formatAMPM(new Date()) <= EndleagTime){\r\n  //   //   console.log(formatAMPM(new Date()));\r\n  //   //   setIsItNot5PM(false);\r\n  //   // }else{\r\n  //   //   //console.log(\"data\",currentdatevalu === Startleagdata);\r\n  //   //   console.log(formatAMPM(new Date()));\r\n  //   //   setIsItNot5PM(true);\r\n  //   // }\r\n  //   }else{\r\n  //     //console.log(\"data\",currentdatevalu === Startleagdata);\r\n  //     console.log(\"data\",\"false\");\r\n  //     setIsItNot5PM(true);\r\n  //   }\r\n  //   // if (formatAMPM(new Date()) !== \"5:00 am\") {\r\n  //   //   setIsItNot5PM(true);\r\n  //   // }\r\n  //   // if (formatAMPM(new Date()) <= \"5:00 pm\") {\r\n  //   //   setIsItNot5PM(false);\r\n  //   // }\r\n  // }, [formatAMPM(new Date())]);\r\n\r\n  const handleSubmit = async () => {\r\n    console.log(format(new Date(), 'MM/dd/yyyy h:mm aa'));\r\n    var currentdatevalu = format(new Date(), 'MM/dd/yyyy h:mm aa');\r\n    console.log(\"etcgjs\",userStartleagdata);\r\n    console.log(\"edvc\",currentdatevalu >= userStartleagdata && Endleagdata <= userEndleagdata);\r\n    const { data, error } = await supabase\r\n    .from(\"user\")\r\n    .select()\r\n    .eq(\"email\", email);\r\n    if(data[0].Teamcode !== null){\r\n    if(currentdatevalu >= userEndleagdata && Endleagdata <= userEndleagdata){\r\n      console.log(\"data\",currentdatevalu >= userStartleagdata && Endleagdata <= userEndleagdata);\r\n      setIsItNot5PM(false);\r\n    // if(formatAMPM(new Date()) >= StartleagTime && formatAMPM(new Date()) <= EndleagTime){\r\n    //   console.log(formatAMPM(new Date()));\r\n    //   setIsItNot5PM(false);\r\n    // }else{\r\n    //   //console.log(\"data\",currentdatevalu === Startleagdata);\r\n    //   console.log(formatAMPM(new Date()));\r\n    //   setIsItNot5PM(true);\r\n    // }\r\n    }else{\r\n      //console.log(\"data\",currentdatevalu === Startleagdata);\r\n      console.log(\"data\",\"false\");\r\n      history.push({\r\n        pathname: \"/update-player-screen/\",\r\n        state: userData,\r\n      })\r\n      //setIsItNot5PM(true);\r\n    }\r\n  }else{\r\n    history.push({\r\n      pathname: \"/update-player-screen/\",\r\n      state: userData,\r\n    })\r\n  }\r\n    console.log(isItNot5PM);\r\n    // console.log(format(new Date(), 'dd/MM/yyyy'));\r\n    // var currentdatevalu = format(new Date(), 'dd/MM/yyyy');\r\n    // if(currentdatevalu <= Startleagdata){\r\n    //   console.log(\"data\",currentdatevalu <= Startleagdata);\r\n    //   if(formatAMPM(new Date()) <= StartleagTime){\r\n    //     console.log(formatAMPM(new Date()));\r\n    //     //setIsItNot5PM(false);\r\n    //   }else{\r\n    //     console.log(formatAMPM(new Date()));\r\n    //     history.push({\r\n    //       pathname: \"/update-player-screen/\",\r\n    //       state: userData,\r\n    //     });\r\n    //   }\r\n    // }else{\r\n    //   history.push({\r\n    //     pathname: \"/update-player-screen/\",\r\n    //     state: userData,\r\n    //   });\r\n    // }\r\n\r\n    // if (isItNot5PM === true) {\r\n    //   console.log(isItNot5PM);\r\n    //   history.push({\r\n    //     pathname: \"/update-player-screen/\",\r\n    //     state: userData,\r\n    //   })\r\n    // }\r\n  };\r\n  const checkboxInput = {\r\n    email : userData[0].email,\r\n  };\r\n  const handleHome = async () => {\r\n      history.push({\r\n        pathname: \"/landing-screen/\",\r\n        state: checkboxInput,\r\n      });\r\n  };\r\n  \r\n\r\n  return (\r\n    <div className=\"section playerlist-section\">\r\n      {loading ? (\r\n        <div className=\"loader-container\">\r\n          <div className=\"spinner\"></div>\r\n          <img src={logoimages} style={{ width: 100, height: 100 }} />\r\n        </div>\r\n      ) : (\r\n        <div className=\"contenor\">\r\n          <div className=\"neareleaguecon\">\r\n            <div className=\" back-arrow\" style={{ marginLeft: 12 }}>\r\n              <i\r\n                onClick={() => history.goBack()}\r\n                className=\"fa fa-arrow-left mt-4\"\r\n                aria-hidden=\"true\"\r\n              ></i>\r\n            </div>\r\n            <div className=\" title text-center teamhadding  h-40 mt-3 mb-2\">\r\n              {\" \"}\r\n              {userActualLeagueName}\r\n            </div>\r\n          </div>\r\n          {/* <div className=\"col-12 text-center nervesNae mt-1 mb-2\"> NAE FNCS</div> */}\r\n          {/* <hr /> */}\r\n\r\n          <div className=\"row top-bar\">\r\n            <div className=\"col-12 px-4 d-flex\"></div>\r\n          </div>\r\n\r\n          <div className=\"row table-data w-100 m-0\">\r\n          {existLeaguedate && (\r\n              <div className=\"neralartrow\">\r\n              <i className='fa fa-exclamation-triangle'><span className=\"time-part\">&nbsp;Rosters lock at {EndleagTime} EST on {Endleagdata}</span></i>\r\n              </div>\r\n            )}\r\n            \r\n            <div className=\"Mgmthadding\">\r\n              <div className=\"mgmtteam\">PLAYER</div>\r\n              <div\r\n                style={{ width: \"100%\", textAlign: \"right\", color: \"#757575\" }}\r\n              >\r\n                POINTS\r\n              </div>\r\n            </div>\r\n            {userData &&\r\n              userData.map((player, index) => (\r\n                <div\r\n                  key={index}\r\n                  id={\"row-data-\" + index}\r\n                  className=\"col-12 table-body px-3 d-flex justify-content-between\"\r\n                >\r\n                  <div className=\"selectteamname\">{player.playername}</div>\r\n                  <div className=\"points pe-3\">{player.pointsearend}</div>\r\n                </div>\r\n              ))}\r\n            <div className=\"nervesrow\">\r\n              <div className=\"nervesTotal\">Total</div>\r\n              <div className=\"nervesnum\">{totalPoints}</div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"row btn-section\">\r\n            <button\r\n              onClick={() => handleSubmit()}\r\n              className=\"col-12 procced-btn mb-1\"\r\n            >\r\n              Edit Roster\r\n            </button>\r\n            <button\r\n              onClick={() => handleHome()}\r\n              className=\"col-12 procced-btn homebuton\"\r\n              style={{backgroundColor: 'transparent',color: '#e5007d',border: '1px solid '}}\r\n            >\r\n              Home\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}