{"ast":null,"code":"var _jsxFileName = \"D:\\\\Clutchup-Fantasy\\\\Clutchup-Fantasy\\\\src\\\\components\\\\pages\\\\Leaderboards.js\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"./Style.css\";\nimport { supabase } from \"../../supabaseClient\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Leaderboards = props => {\n  const {\n    myTeam,\n    email\n  } = props;\n  const [top3GlobalTeams, setTop3GlobalTeams] = useState([]);\n  const [joinedTeamOnLeague, setJoinedTeamOnLeague] = useState([]);\n  const [usersEmail, setUsersEmail] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [loadingnel, setLoadingNel] = useState(true);\n  const [loadinggolbl, setLoadinggolbl] = useState(true);\n  const [buttonLeague, setButtonLeague] = useState('');\n  const [nersLeague, setNersLeague] = useState([]);\n  const [Leaguename, set5Leaguename] = useState('');\n  const [leaguebtn, setLeagueBtn] = useState('');\n  const [Leaguenameval, setLeaguenameval] = useState([]);\n  const [activeTab, setActiveTab] = useState(\"global\");\n  const [nearTab, setNearTab] = useState(\"\");\n  var filterData = [];\n  let points = [];\n  const [asandindPoints5League, setAsandindPoints5League] = useState([]);\n  const [totalPointsOfAllTeam, setTotalPointsOfAllTeam] = useState([]);\n  let joinedLeague = [];\n  const history = useHistory();\n  useEffect(() => {\n    fetchNersLeague();\n    fetchGlobal();\n    fetch5League();\n    fetchUsersWithEmail();\n  }, []); // ----------------handle button click of leaderboard---------------------\n\n  const handleTabnyarChange = tabName => {\n    setActiveTab(tabName);\n    setNearTab(tabName);\n    fetchleagteamdata(tabName);\n  };\n\n  const handleTabChange = tabName => {\n    setActiveTab(tabName); //setNearTab(tabName);\n    //fetchleagteamdata(tabName);\n  };\n\n  const fetchUsersWithEmail = async () => {\n    const {\n      data,\n      error\n    } = await supabase.from(\"user\").select(\"email\");\n    setUsersEmail(data);\n  }; // ----------------------------5league--------------------------------------------\n\n\n  const fetch5League = async () => {\n    const {\n      data,\n      error\n    } = await supabase.from(\"user\").select();\n    const leagueName = [];\n    console.log(data[0].LeagueName);\n    set5Leaguename(data[0].LeagueName);\n    data.forEach(user => {\n      if (user.email && user.LeagueName !== null) {\n        leagueName.push(user.LeagueName);\n      }\n    });\n\n    if (leagueName.length > 0) {\n      for (let i = 0; i < leagueName.length; i++) {\n        const {\n          data,\n          error\n        } = await supabase.from(\"league\").select().match({\n          leaguename: leagueName[i],\n          type: 'Private'\n        });\n        joinedTeamOnLeague.push({\n          leagueName: leagueName[i],\n          teamName: data.map(user => user.teamname),\n          teams: []\n        });\n      }\n\n      if (joinedTeamOnLeague.length !== 0) {\n        joinedTeamOnLeague.map((teams, i) => {\n          teams.teamName.forEach(async team => {\n            const {\n              data,\n              error\n            } = await supabase.from(\"selectedteam\").select().eq(\"teamname\", team);\n            joinedTeamOnLeague[i].teams = [...joinedTeamOnLeague[i].teams, data.map(player => player)];\n          });\n        });\n      }\n    }\n\n    setLoading(false);\n  };\n\n  if (joinedTeamOnLeague) {\n    joinedTeamOnLeague.map((team, i) => {\n      totalPointsOfAllTeam[i] = team.teams.map(teams => teams.map(player => {\n        return player.pointsearend;\n      }));\n    }); // -------------------------------total count---------------------------\n\n    let totalPointsLeague = [];\n\n    if (totalPointsOfAllTeam) {\n      for (let i = 0; i < totalPointsOfAllTeam.length; i++) {\n        totalPointsLeague[i] = 0;\n\n        for (let j = 0; j < totalPointsOfAllTeam[i].length; j++) {\n          for (let k = 0; k < totalPointsOfAllTeam[i][j].length; k++) {\n            totalPointsLeague[i] = totalPointsLeague[i] + Number(totalPointsOfAllTeam[i][j][k]);\n          }\n        }\n      }\n    }\n\n    if (totalPointsLeague.length !== 0) {\n      totalPointsLeague.map(tPoints => asandindPoints5League.push(tPoints)); // -------------------------------sorting------------------------------\n\n      let a;\n\n      if (asandindPoints5League.length > 0) {\n        for (let i = 0; i < asandindPoints5League.length; ++i) {\n          for (let j = i + 1; j < asandindPoints5League.length; ++j) {\n            if (asandindPoints5League[i] < asandindPoints5League[j]) {\n              a = asandindPoints5League[i];\n              asandindPoints5League[i] = asandindPoints5League[j];\n              asandindPoints5League[j] = a;\n            }\n          }\n        }\n      }\n    }\n\n    if (totalPointsLeague[0] !== 0) {\n      for (let i = 0; i < totalPointsLeague.length; i++) {\n        joinedTeamOnLeague[i].totalPoints = totalPointsLeague[i];\n      }\n    }\n  } // ---------------------------sorting league of 5 league----------------------\n\n\n  if (joinedTeamOnLeague) {\n    joinedTeamOnLeague.sort(function (a, b) {\n      return b.totalPoints - a.totalPoints;\n    });\n  } // -----------------------------------global---------------------------------\n\n\n  const fetchGlobal = async () => {\n    setLoadinggolbl(true);\n    let teamPlayersWithEmail = [];\n    let goloballeag = [];\n    let teams = [];\n    const {\n      data,\n      error\n    } = await supabase.from(\"league\").select().match({\n      type: \"Global\",\n      email: email\n    });\n    console.log(\"file\", data);\n\n    if (data.length !== 0) {\n      setLoadinggolbl(true);\n      const {\n        data,\n        error\n      } = await supabase.from(\"league\").select().eq(\"type\", \"Global\"); // console.log(data[0].leaguename);\n\n      setLeagueBtn(data[0].leaguename);\n      goloballeag.push(data);\n      console.log(\"assdwsdf\", goloballeag[0].length);\n\n      for (let i = 0; i < goloballeag[0].length; i++) {\n        console.log(\"assds\", goloballeag[0][i].teamname);\n        const {\n          data,\n          error\n        } = await supabase.from(\"selectedteam\").select().eq(\"teamname\", goloballeag[0][i].teamname);\n        console.log(\"shfnvdc\", data);\n        teamPlayersWithEmail = data.filter(teamPlayer => {\n          if (teamPlayer.email && teamPlayer.email !== \"\") {\n            return true;\n          }\n\n          return false;\n        });\n        console.log(\"shfnv\", teamPlayersWithEmail);\n        let teamGroupedByEmail = [];\n\n        if (teamPlayersWithEmail.length > 0) {\n          teamPlayersWithEmail.forEach(player => {\n            let previousCount = teamGroupedByEmail[player.email] ? teamGroupedByEmail[player.email].teamScore : 0;\n            let count = previousCount + Number(player.pointsearend);\n            let team = {\n              teamName: player.username,\n              teamScore: count\n            };\n            teamGroupedByEmail[player.email] = team;\n          });\n        }\n\n        let allKeys = Object.keys(teamGroupedByEmail);\n        allKeys.forEach(key => {\n          teams.push(teamGroupedByEmail[key]);\n        });\n        teams = teams.sort(compare).reverse();\n      }\n\n      setTop3GlobalTeams(teams);\n      console.log(\"dfsdf\", teams);\n      setLoadinggolbl(false);\n    } else {\n      let joinleag = [];\n      const {\n        data,\n        error\n      } = await supabase.from(\"league\").select().match({\n        email: email,\n        type: 'Private'\n      }); // console.log(data[0].leaguename);\n      //setLeagueBtn(data[0].leaguename)\n\n      console.log(\"cdjfk\", data);\n      joinleag.push(data);\n      console.log(\"assdwsdf\", joinleag[0]);\n      joinedLeague = data.map(joinedLeague => {\n        return joinedLeague.leaguename;\n      });\n      console.log(\"lgmanem\", joinedLeague[0]);\n      setActiveTab(joinedLeague[0]);\n      setNearTab(joinedLeague[0]);\n      fetchleagteamdata(joinedLeague[0]);\n    }\n\n    setLoadinggolbl(false);\n  };\n\n  function compare(a, b) {\n    if (a.teamScore < b.teamScore) {\n      return -1;\n    }\n\n    if (a.teamScore > b.teamScore) {\n      return 1;\n    }\n\n    return 0;\n  } // useEffect(() => {\n  //   fetchGlobal();\n  //   fetchNersLeague();\n  //   fetch5League();\n  //   fetchUsersWithEmail();\n  // }, []);\n\n\n  const fetchleagteamdata = async leagname => {\n    setLoadingNel(true);\n    console.log(\"namevausda\", leagname);\n    setNersLeague([]);\n    let teamPlayersWithEmail = [];\n    let joinleag = [];\n    let teams = [];\n    console.log(\"sdcb\", nersLeague);\n    const {\n      data,\n      error\n    } = await supabase.from(\"league\").select().match({\n      leaguename: leagname,\n      type: 'Private'\n    });\n    console.log(\"lisrdata\", data);\n    joinleag.push(data);\n\n    for (let i = 0; i < joinleag[0].length; i++) {\n      console.log(\"assdsqec\", joinleag[0]);\n      const {\n        data,\n        error\n      } = await supabase.from(\"selectedteam\").select().eq(\"teamname\", joinleag[0][i].teamname);\n      console.log(\"shfnvdcqefv\", data);\n      teamPlayersWithEmail = data.filter(teamPlayer => {\n        if (teamPlayer.email && teamPlayer.email !== \"\") {\n          return true;\n        }\n\n        return false;\n      });\n      console.log(\"shfnv\", teamPlayersWithEmail);\n      let teamGroupedByEmail = [];\n\n      if (teamPlayersWithEmail.length > 0) {\n        teamPlayersWithEmail.forEach(player => {\n          let previousCount = teamGroupedByEmail[player.email] ? teamGroupedByEmail[player.email].teamScore : 0;\n          let count = previousCount + Number(player.pointsearend);\n          let team = {\n            teamName: player.username,\n            teamScore: count\n          };\n          teamGroupedByEmail[player.email] = team;\n        });\n      }\n\n      let allKeys = Object.keys(teamGroupedByEmail);\n      allKeys.forEach(key => {\n        teams.push(teamGroupedByEmail[key]);\n      });\n      teams = teams.sort(compare).reverse();\n    }\n\n    setNersLeague(teams);\n    console.log(\"joinleg\", teams);\n    setLoadingNel(false); // const { data, error } = await supabase.from(\"user\").select(\"email\");\n    // setUsersEmail(data);\n  }; // -----------------------------------nersleague---------------------------------------\n\n\n  const fetchNersLeague = async () => {\n    setLoadingNel(true);\n    let teamPlayersWithEmail = [];\n    let joinleag = [];\n    let teams = [];\n    let leagnameval = [];\n    const {\n      data,\n      error\n    } = await supabase.from(\"league\").select().match({\n      email: email,\n      type: 'Private'\n    }); // console.log(data[0].leaguename);\n    //setLeagueBtn(data[0].leaguename)\n\n    console.log(\"cdjfk\", data);\n    joinleag.push(data);\n\n    if (data.length !== 0) {\n      console.log(\"assdwsdf\", joinleag[0]);\n      joinedLeague = joinleag[0].map(joinedLeague => {\n        console.log(\"fnbma\", joinedLeague);\n        return joinedLeague.leaguename;\n      });\n      setLeaguenameval(joinedLeague);\n      console.log(\"list\", joinedLeague);\n\n      for (let i = 0; i < joinleag.length; i++) {\n        //console.log(\"fhdjk\",joinleag[0][i].leaguename);\n        const {\n          data\n        } = await supabase.from(\"createnewleague\").select().eq(\"leaguename\", joinleag[0][i].leaguename);\n        console.log(\"vcnsm\", data);\n        leagnameval.push(data[0].teamname);\n      }\n\n      console.log(\"mycajs\", leagnameval.length); // joinedLeague.forEach(async (element, index) => {\n      // console.log(\"name\",element);\n      //   const { data } = await supabase\n      //     .from(\"user\")\n      //     .select()\n      //     .match({leaguename: element});\n      //     console.log(\"vcnsm\",data);\n      //    leagnameval.push(data);\n      // });\n      //setButtonLeague(joinedLeague[0].leaguename);\n      //console.log(\"myleagx\", joinedLeague);\n      // setButtonLeague(joinedLeague[0].leaguename);\n\n      for (let i = 0; i < leagnameval.length; i++) {\n        console.log(\"assdsqec\", leagnameval[i]);\n        const {\n          data,\n          error\n        } = await supabase.from(\"selectedteam\").select().eq(\"teamname\", leagnameval[i]);\n        console.log(\"shfnvdcqefv\", data);\n        teamPlayersWithEmail = data.filter(teamPlayer => {\n          if (teamPlayer.email && teamPlayer.email !== \"\") {\n            return true;\n          }\n\n          return false;\n        });\n        console.log(\"shfnv\", teamPlayersWithEmail);\n        let teamGroupedByEmail = [];\n\n        if (teamPlayersWithEmail.length > 0) {\n          teamPlayersWithEmail.forEach(player => {\n            let previousCount = teamGroupedByEmail[player.email] ? teamGroupedByEmail[player.email].teamScore : 0;\n            let count = previousCount + Number(player.pointsearend);\n            let team = {\n              teamName: player.username,\n              teamScore: count\n            };\n            teamGroupedByEmail[player.email] = team;\n          });\n        }\n\n        let allKeys = Object.keys(teamGroupedByEmail);\n        allKeys.forEach(key => {\n          teams.push(teamGroupedByEmail[key]);\n        });\n        teams = teams.sort(compare).reverse();\n      }\n\n      setNersLeague(teams);\n      console.log(\"joinleg\", teams);\n    } // console.log(\"buttom\",leaguebtn);\n    // if(leaguebtn === ''){\n    // }\n    // const { data, error } = await supabase.from(\"selectedteam\").select();\n    // let teamPlayersWithEmail = data.filter((teamPlayer) => {\n    //   if (teamPlayer.email && teamPlayer.email !== \"\") {\n    //     return true;\n    //   }\n    //   return false;\n    // });\n    // let teamGroupedByEmail = [];\n    // if (teamPlayersWithEmail.length > 0) {\n    //   teamPlayersWithEmail.forEach((player) => {\n    //     let previousCount = teamGroupedByEmail[player.email]\n    //       ? teamGroupedByEmail[player.email].teamScore\n    //       : 0;\n    //     let count = previousCount + Number(player.pointsearend);\n    //     let team = {\n    //       teamName: player.teamname,\n    //       teamScore: count,\n    //     };\n    //     console.log();\n    //     teamGroupedByEmail[player.email] = team;\n    //   });\n    // }\n    // let allKeys = Object.keys(teamGroupedByEmail);\n    // let teams = [];\n    // allKeys.forEach((key) => {\n    //   teams.push(teamGroupedByEmail[key]);\n    // });\n    // teams = teams.sort(compare).reverse();\n    // if (teams) {\n    //   const { data, error } = await supabase\n    //     .from(\"league\")\n    //     .select()\n    //     .match({email: email,type:'Private'});\n    //   let joinedLeague = data.map((joinedLeague) => {\n    //     return joinedLeague.leaguename;\n    //   });\n    //   var newData;\n    //   joinedLeague.forEach(async (element, index) => {\n    //     const { data } = await supabase\n    //       .from(\"league\")\n    //       .select()\n    //       .match({leaguename: element,type:'Private'});\n    //   });\n    //   for (let i = 0; i < joinedLeague.length; i++) {\n    //     newData = [];\n    //     const { data, error } = await supabase\n    //       .from(\"league\")\n    //       .select()\n    //       .match({leaguename: joinedLeague[i],type:'Private'});\n    //         setButtonLeague(data[0].leaguename);\n    //       nersLeague.push({\n    //         leagueName: joinedLeague[i],\n    //         teams: data.map((league) => league.teamname),\n    //         teamTotalScore: teams.teamScore,\n    //       });\n    //     } \n    //  ;\n    //   var myFilerTeam = [];\n    //   var count;\n    //   nersLeague.map((myLeagueTeams, i) => {\n    //     count = 0;\n    //     myLeagueTeams.teams.forEach((team) => {\n    //       teams.filter((teams) => {\n    //         if (teams.teamName === team) {\n    //           count = count + Number(teams.teamScore);\n    //         }\n    //       });\n    //     });\n    //     nersLeague[i].teamTotalScore = count;\n    //   });\n    //    console.log(nersLeague);\n    //   nersLeague.sort(function (a, b) {\n    //     return b.teamTotalScore - a.teamTotalScore;\n    //   });\n\n\n    setLoadingNel(false);\n  }; // ------------------------------leader board button click-------------------------------\n\n\n  const viewAllGlobal = () => {\n    history.push({\n      pathname: \"/league-mgmt-screen/\",\n      state: {\n        top3GlobalTeams,\n        email,\n        leaguebtn\n      }\n    });\n  };\n\n  const viewAllNersLeague = () => {\n    console.log(\"leagdata\", nersLeague);\n    history.push({\n      pathname: \"/league-mgmt-screen-ners-league/\",\n      state: {\n        nersLeague,\n        email,\n        nearTab\n      }\n    });\n  };\n\n  const viewAllLeague5 = () => {\n    history.push({\n      pathname: \"/league-mgmt-screen-5league/\",\n      state: {\n        joinedTeamOnLeague,\n        email\n      }\n    });\n  };\n\n  console.log(\"cnvmd\", Leaguenameval);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, loading ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"loader-containersss\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 512,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"spinnerss\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 513,\n      columnNumber: 13\n    }\n  })) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"landing-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 517,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"p-3 contenthadding\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 518,\n      columnNumber: 7\n    }\n  }, \"Leaderboards\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn-container w-100\",\n    style: {\n      marginBottom: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 519,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"rowscontents\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 520,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"leaguerow\",\n    style: {\n      overflowX: 'auto',\n      overflowY: \"hidden\",\n      scrollBehavior: 'smooth'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 521,\n      columnNumber: 11\n    }\n  }, leaguebtn && /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"buttonsui\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 523,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    className: \"buttonli\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 524,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleTabChange(\"global\"),\n    className: activeTab === \"global\" ? \"activebutton \" : \"Leaderboards-button \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 525,\n      columnNumber: 13\n    }\n  }, leaguebtn))), Leaguenameval && Leaguenameval.map((legnam, i) => {\n    {\n      console.log(\"cnvmd\", legnam);\n    }\n    return /*#__PURE__*/React.createElement(\"ul\", {\n      key: i,\n      className: \"buttonsui\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 544,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      className: \"buttonli\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 545,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => handleTabnyarChange(legnam),\n      className: activeTab === legnam ? \"activebutton\" : \"Leaderboards-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 546,\n        columnNumber: 19\n      }\n    }, legnam)));\n  })))), activeTab === \"global\" && /*#__PURE__*/React.createElement(React.Fragment, null, loadinggolbl ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"spoilorloder\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 582,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"spinnerssun \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 583,\n      columnNumber: 13\n    }\n  })) : /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 588,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 589,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    className: \"border-btm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 590,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    style: {\n      fontSize: 11,\n      color: \"#757575\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 591,\n      columnNumber: 17\n    }\n  }, \"\\xA0\\xA0\\xA0TEAM\"), /*#__PURE__*/React.createElement(\"th\", {\n    style: {\n      fontSize: 11,\n      color: \"#757575\",\n      textAlign: \"right\",\n      paddingRight: \"1%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 592,\n      columnNumber: 17\n    }\n  }, \"SCORED\\xA0\\xA0\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 604,\n      columnNumber: 13\n    }\n  }, top3GlobalTeams.length > 0 && top3GlobalTeams.map((team, i) => {\n    if (i <= 2) {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 609,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        style: {\n          fontSize: 17\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 610,\n          columnNumber: 25\n        }\n      }, \"\\xA0\\xA0\\xA0\", i + 1, \". \", team.teamName), /*#__PURE__*/React.createElement(\"td\", {\n        className: \"teamnameonbord\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 613,\n          columnNumber: 25\n        }\n      }, team.teamScore, \"\\xA0\\xA0\\xA0\\xA0\\xA0\"));\n    }\n  }))), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"landingbuttonlink\",\n    onClick: viewAllGlobal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 625,\n      columnNumber: 11\n    }\n  }, \"View All\")), activeTab === nearTab && /*#__PURE__*/React.createElement(React.Fragment, null, loadingnel ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"spoilorloder\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 634,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"spinnerssun \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 635,\n      columnNumber: 15\n    }\n  })) : /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 640,\n      columnNumber: 16\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 641,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    className: \"border-btm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 642,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    style: {\n      fontSize: 11,\n      color: \"#757575\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 643,\n      columnNumber: 17\n    }\n  }, \"\\xA0\\xA0\\xA0TEAM\"), /*#__PURE__*/React.createElement(\"th\", {\n    style: {\n      fontSize: 11,\n      color: \"#757575\",\n      textAlign: \"right\",\n      paddingRight: \"1%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 644,\n      columnNumber: 17\n    }\n  }, \"SCORED\\xA0\\xA0\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 656,\n      columnNumber: 13\n    }\n  }, nersLeague && nersLeague.map((league, i) => {\n    if (i <= 2) {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 661,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        style: {\n          fontSize: 17\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 662,\n          columnNumber: 25\n        }\n      }, \"\\xA0\\xA0\\xA0\", i + 1, \". \", league.teamName), /*#__PURE__*/React.createElement(\"td\", {\n        style: {\n          fontsize: 13,\n          color: \"#E5007D\",\n          textAlign: \"right\",\n          paddingRight: \"2%\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 665,\n          columnNumber: 25\n        }\n      }, league.teamScore, \"\\xA0\\xA0\\xA0\"));\n    }\n  }))), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"landingbuttonlink\",\n    onClick: viewAllNersLeague,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 682,\n      columnNumber: 11\n    }\n  }, \"View All\")), activeTab === \"fiveLeague\" && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 689,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 690,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    className: \"border-btm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 691,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    style: {\n      fontSize: 11,\n      color: \"#757575\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 692,\n      columnNumber: 17\n    }\n  }, \"\\xA0\\xA0\\xA0LEAGUE\"), /*#__PURE__*/React.createElement(\"th\", {\n    style: {\n      fontSize: 11,\n      color: \"#757575\",\n      textAlign: \"right\",\n      paddingRight: \"1%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 693,\n      columnNumber: 17\n    }\n  }, \"SCORED\\xA0\\xA0\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 705,\n      columnNumber: 13\n    }\n  }, joinedTeamOnLeague && joinedTeamOnLeague.map((league, i) => {\n    if (i <= 4) {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 710,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        style: {\n          fontSize: 17\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 711,\n          columnNumber: 25\n        }\n      }, \"\\xA0\\xA0\\xA0\", i + 1, \". \", league.leagueName), /*#__PURE__*/React.createElement(\"td\", {\n        style: {\n          fontsize: 13,\n          color: \"#E5007D\",\n          textAlign: \"right\",\n          paddingRight: \"2%\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 714,\n          columnNumber: 25\n        }\n      }, league.totalPoints, \"\\xA0\\xA0\\xA0\\xA0\"));\n    }\n  }))), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"landingbuttonlink\",\n    onClick: viewAllLeague5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 731,\n      columnNumber: 11\n    }\n  }, \"View All\"))));\n};\n\nexport default Leaderboards;","map":{"version":3,"names":["React","useState","useEffect","useRef","supabase","useHistory","Leaderboards","props","myTeam","email","top3GlobalTeams","setTop3GlobalTeams","joinedTeamOnLeague","setJoinedTeamOnLeague","usersEmail","setUsersEmail","loading","setLoading","loadingnel","setLoadingNel","loadinggolbl","setLoadinggolbl","buttonLeague","setButtonLeague","nersLeague","setNersLeague","Leaguename","set5Leaguename","leaguebtn","setLeagueBtn","Leaguenameval","setLeaguenameval","activeTab","setActiveTab","nearTab","setNearTab","filterData","points","asandindPoints5League","setAsandindPoints5League","totalPointsOfAllTeam","setTotalPointsOfAllTeam","joinedLeague","history","fetchNersLeague","fetchGlobal","fetch5League","fetchUsersWithEmail","handleTabnyarChange","tabName","fetchleagteamdata","handleTabChange","data","error","from","select","leagueName","console","log","LeagueName","forEach","user","push","length","i","match","leaguename","type","teamName","map","teamname","teams","team","eq","player","pointsearend","totalPointsLeague","j","k","Number","tPoints","a","totalPoints","sort","b","teamPlayersWithEmail","goloballeag","filter","teamPlayer","teamGroupedByEmail","previousCount","teamScore","count","username","allKeys","Object","keys","key","compare","reverse","joinleag","leagname","leagnameval","viewAllGlobal","pathname","state","viewAllNersLeague","viewAllLeague5","marginBottom","overflowX","overflowY","scrollBehavior","legnam","fontSize","color","textAlign","paddingRight","league","fontsize"],"sources":["D:/Clutchup-Fantasy/Clutchup-Fantasy/src/components/pages/Leaderboards.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport \"./Style.css\";\r\nimport { supabase } from \"../../supabaseClient\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Leaderboards = (props) => {\r\n  const { myTeam, email } = props;\r\n\r\n  const [top3GlobalTeams, setTop3GlobalTeams] = useState([]);\r\n  const [joinedTeamOnLeague, setJoinedTeamOnLeague] = useState([]);\r\n  const [usersEmail, setUsersEmail] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const[loadingnel,setLoadingNel] = useState(true);\r\n  const[loadinggolbl,setLoadinggolbl] = useState(true);\r\n  const [buttonLeague,setButtonLeague] = useState('');\r\n  const [nersLeague, setNersLeague] = useState([]);\r\n  const [Leaguename,set5Leaguename] = useState('')\r\n  const [leaguebtn,setLeagueBtn] = useState('')\r\n  const [Leaguenameval, setLeaguenameval] = useState([]);\r\n  const [activeTab, setActiveTab] = useState(\"global\");\r\n  const [nearTab, setNearTab] = useState(\"\");\r\n\r\n  var filterData = [];\r\n  let points = [];\r\n  const [asandindPoints5League, setAsandindPoints5League] = useState([]);\r\n  const [totalPointsOfAllTeam, setTotalPointsOfAllTeam] = useState([]);\r\n  let joinedLeague = [];\r\n\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    fetchNersLeague();\r\n    fetchGlobal();\r\n    fetch5League();\r\n    fetchUsersWithEmail();\r\n  }, []);\r\n\r\n  // ----------------handle button click of leaderboard---------------------\r\n  const handleTabnyarChange = (tabName) => {\r\n    setActiveTab(tabName);\r\n    setNearTab(tabName);\r\n    fetchleagteamdata(tabName);\r\n  };\r\n\r\n  const handleTabChange = (tabName) => {\r\n    setActiveTab(tabName);\r\n    //setNearTab(tabName);\r\n    //fetchleagteamdata(tabName);\r\n  };\r\n  const fetchUsersWithEmail = async () => {\r\n    const { data, error } = await supabase.from(\"user\").select(\"email\");\r\n    setUsersEmail(data);\r\n  };\r\n\r\n  // ----------------------------5league--------------------------------------------\r\n  const fetch5League = async () => {\r\n    const { data, error } = await supabase.from(\"user\").select();\r\n    const leagueName = [];\r\n    console.log(data[0].LeagueName);\r\n    set5Leaguename(data[0].LeagueName)\r\n    data.forEach((user) => {\r\n      if (user.email && user.LeagueName !== null) {\r\n        leagueName.push(user.LeagueName);\r\n      }\r\n    });\r\n\r\n    if (leagueName.length > 0) {\r\n      for (let i = 0; i < leagueName.length; i++) {\r\n        const { data, error } = await supabase\r\n          .from(\"league\")\r\n          .select()\r\n          .match({leaguename: leagueName[i],type:'Private'});\r\n        joinedTeamOnLeague.push({\r\n          leagueName: leagueName[i],\r\n          teamName: data.map((user) => user.teamname),\r\n          teams: [],\r\n        });\r\n      }\r\n\r\n if (joinedTeamOnLeague.length !== 0) {\r\n        joinedTeamOnLeague.map((teams, i) => {\r\n          teams.teamName.forEach(async (team) => {\r\n            const { data, error } = await supabase\r\n              .from(\"selectedteam\")\r\n              .select()\r\n              .eq(\"teamname\", team);\r\n              \r\n            joinedTeamOnLeague[i].teams = [\r\n              ...joinedTeamOnLeague[i].teams,\r\n              data.map((player) => player),\r\n              \r\n            ];\r\n          });\r\n        });\r\n      }\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  if (joinedTeamOnLeague) {\r\n    joinedTeamOnLeague.map((team, i) => {\r\n      totalPointsOfAllTeam[i] = team.teams.map((teams) =>\r\n        teams.map((player) => {\r\n          return player.pointsearend;\r\n        })\r\n      );\r\n    });\r\n    // -------------------------------total count---------------------------\r\n    let totalPointsLeague = [];\r\n    if (totalPointsOfAllTeam) {\r\n      for (let i = 0; i < totalPointsOfAllTeam.length; i++) {\r\n        totalPointsLeague[i] = 0;\r\n        for (let j = 0; j < totalPointsOfAllTeam[i].length; j++) {\r\n          for (let k = 0; k < totalPointsOfAllTeam[i][j].length; k++) {\r\n            totalPointsLeague[i] =\r\n              totalPointsLeague[i] + Number(totalPointsOfAllTeam[i][j][k]);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    if (totalPointsLeague.length !== 0) {\r\n      totalPointsLeague.map((tPoints) => asandindPoints5League.push(tPoints));\r\n      // -------------------------------sorting------------------------------\r\n      let a;\r\n      if (asandindPoints5League.length > 0) {\r\n        for (let i = 0; i < asandindPoints5League.length; ++i) {\r\n          for (let j = i + 1; j < asandindPoints5League.length; ++j) {\r\n            if (asandindPoints5League[i] < asandindPoints5League[j]) {\r\n              a = asandindPoints5League[i];\r\n              asandindPoints5League[i] = asandindPoints5League[j];\r\n              asandindPoints5League[j] = a;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    if (totalPointsLeague[0] !== 0) {\r\n      for (let i = 0; i < totalPointsLeague.length; i++) {\r\n        joinedTeamOnLeague[i].totalPoints = totalPointsLeague[i];\r\n      }\r\n    }\r\n  }\r\n\r\n  // ---------------------------sorting league of 5 league----------------------\r\n  if (joinedTeamOnLeague) {\r\n    joinedTeamOnLeague.sort(function (a, b) {\r\n      return b.totalPoints - a.totalPoints;\r\n    });\r\n  }\r\n\r\n  // -----------------------------------global---------------------------------\r\n  const fetchGlobal = async () => {\r\n    setLoadinggolbl(true);\r\n    let teamPlayersWithEmail =[];\r\n    let goloballeag = [];\r\n    let teams = [];\r\n    const { data, error } = await supabase.from(\"league\").select().match({type:\"Global\",email:email});\r\n    console.log(\"file\",data);\r\n    if(data.length !== 0){\r\n      setLoadinggolbl(true);\r\n\r\n    const { data, error } = await supabase.from(\"league\").select().eq(\"type\",\"Global\");\r\n    // console.log(data[0].leaguename);\r\n    setLeagueBtn(data[0].leaguename);\r\n    goloballeag.push(data);\r\n    console.log(\"assdwsdf\",goloballeag[0].length);\r\n    for(let i=0; i < goloballeag[0].length; i++){\r\n    console.log(\"assds\",goloballeag[0][i].teamname);\r\n    const { data, error } = await supabase.from(\"selectedteam\").select().eq(\"teamname\",goloballeag[0][i].teamname);\r\n    console.log(\"shfnvdc\",data);\r\n    teamPlayersWithEmail = data.filter((teamPlayer) => {\r\n      if (teamPlayer.email && teamPlayer.email !== \"\") {\r\n        return true;\r\n      }\r\n      return false;\r\n    });\r\n  \r\n  console.log(\"shfnv\",teamPlayersWithEmail);\r\n    let teamGroupedByEmail = [];\r\n\r\n    if (teamPlayersWithEmail.length > 0) {\r\n\r\n      teamPlayersWithEmail.forEach((player) => {\r\n        let previousCount = teamGroupedByEmail[player.email]\r\n          ? teamGroupedByEmail[player.email].teamScore\r\n          : 0;\r\n\r\n        let count = previousCount + Number(player.pointsearend);\r\n\r\n        let team = {\r\n          teamName: player.username,\r\n          teamScore: count,\r\n        };\r\n        teamGroupedByEmail[player.email] = team;\r\n      });\r\n    }\r\n\r\n    let allKeys = Object.keys(teamGroupedByEmail);\r\n    \r\n    allKeys.forEach((key) => {\r\n      teams.push(teamGroupedByEmail[key]);\r\n    });\r\n\r\n    teams = teams.sort(compare).reverse();\r\n  }\r\n    setTop3GlobalTeams(teams);\r\n    console.log(\"dfsdf\",teams);\r\n    setLoadinggolbl(false);\r\n\r\n  }else{\r\n    let joinleag = [];\r\n    const { data, error } = await supabase.from(\"league\").select().match({email: email,type:'Private'});\r\n    // console.log(data[0].leaguename);\r\n    //setLeagueBtn(data[0].leaguename)\r\n    console.log(\"cdjfk\",data);\r\n    joinleag.push(data);\r\n    console.log(\"assdwsdf\",joinleag[0]);\r\n    joinedLeague = data.map((joinedLeague) => {\r\n          return joinedLeague.leaguename;\r\n        });\r\n    console.log(\"lgmanem\",joinedLeague[0]);\r\n    setActiveTab(joinedLeague[0]);\r\n    setNearTab(joinedLeague[0]);\r\n    fetchleagteamdata(joinedLeague[0]);\r\n  }\r\n  setLoadinggolbl(false);\r\n\r\n  };\r\n  \r\n  function compare(a, b) {\r\n    if (a.teamScore < b.teamScore) {\r\n      return -1;\r\n    }\r\n    if (a.teamScore > b.teamScore) {\r\n      return 1;\r\n    }\r\n    return 0;\r\n  }\r\n  // useEffect(() => {\r\n  //   fetchGlobal();\r\n  //   fetchNersLeague();\r\n  //   fetch5League();\r\n  //   fetchUsersWithEmail();\r\n  // }, []);\r\n\r\n  const fetchleagteamdata = async (leagname) => {\r\n    setLoadingNel(true);\r\n      console.log(\"namevausda\",leagname);\r\n      setNersLeague([]);\r\n      let teamPlayersWithEmail =[];\r\n    let joinleag = [];\r\n    let teams = [];\r\n    console.log(\"sdcb\",nersLeague);\r\n    const { data, error } = await supabase.from(\"league\").select().match({leaguename: leagname,type:'Private'});\r\n    console.log(\"lisrdata\",data);\r\n    joinleag.push(data);\r\n    for(let i=0; i < joinleag[0].length; i++){\r\n      console.log(\"assdsqec\",joinleag[0]);\r\n      const { data, error } = await supabase.from(\"selectedteam\").select().eq(\"teamname\",joinleag[0][i].teamname);\r\n      console.log(\"shfnvdcqefv\",data);\r\n      teamPlayersWithEmail = data.filter((teamPlayer) => {\r\n        if (teamPlayer.email && teamPlayer.email !== \"\") {\r\n          return true;\r\n        }\r\n        return false;\r\n      });\r\n    \r\n    console.log(\"shfnv\",teamPlayersWithEmail);\r\n      let teamGroupedByEmail = [];\r\n  \r\n      if (teamPlayersWithEmail.length > 0) {\r\n  \r\n        teamPlayersWithEmail.forEach((player) => {\r\n          let previousCount = teamGroupedByEmail[player.email]\r\n            ? teamGroupedByEmail[player.email].teamScore\r\n            : 0;\r\n  \r\n          let count = previousCount + Number(player.pointsearend);\r\n  \r\n          let team = {\r\n            teamName: player.username,\r\n            teamScore: count,\r\n          };\r\n          teamGroupedByEmail[player.email] = team;\r\n        });\r\n      }\r\n  \r\n      let allKeys = Object.keys(teamGroupedByEmail);\r\n      \r\n      allKeys.forEach((key) => {\r\n        teams.push(teamGroupedByEmail[key]);\r\n      });\r\n  \r\n        teams = teams.sort(compare).reverse();\r\n      }\r\n      setNersLeague(teams);\r\n      console.log(\"joinleg\",teams);\r\n      setLoadingNel(false);\r\n    // const { data, error } = await supabase.from(\"user\").select(\"email\");\r\n    // setUsersEmail(data);\r\n  };\r\n  // -----------------------------------nersleague---------------------------------------\r\n  const fetchNersLeague = async () => {\r\n    setLoadingNel(true);\r\n    let teamPlayersWithEmail =[];\r\n    let joinleag = [];\r\n    let teams = [];\r\n    let leagnameval = [];\r\n    const { data, error } = await supabase.from(\"league\").select().match({email: email,type:'Private'});\r\n    // console.log(data[0].leaguename);\r\n    //setLeagueBtn(data[0].leaguename)\r\n    console.log(\"cdjfk\",data);\r\n    joinleag.push(data);\r\n    if(data.length !== 0){\r\n    console.log(\"assdwsdf\",joinleag[0]);\r\n    joinedLeague = joinleag[0].map((joinedLeague) => {\r\n         console.log(\"fnbma\",joinedLeague);\r\n          return joinedLeague.leaguename;\r\n        });\r\n    setLeaguenameval(joinedLeague);\r\n    console.log(\"list\",joinedLeague);\r\n    for(let i=0; i < joinleag.length; i++){\r\n        //console.log(\"fhdjk\",joinleag[0][i].leaguename);\r\n        const { data } = await supabase\r\n          .from(\"createnewleague\")\r\n          .select()\r\n          .eq(\"leaguename\",joinleag[0][i].leaguename);\r\n          console.log(\"vcnsm\",data);\r\n         leagnameval.push(data[0].teamname);\r\n    }\r\n    console.log(\"mycajs\",leagnameval.length);\r\n    \r\n      // joinedLeague.forEach(async (element, index) => {\r\n      // console.log(\"name\",element);\r\n      //   const { data } = await supabase\r\n      //     .from(\"user\")\r\n      //     .select()\r\n      //     .match({leaguename: element});\r\n      //     console.log(\"vcnsm\",data);\r\n      //    leagnameval.push(data);\r\n      // });\r\n      //setButtonLeague(joinedLeague[0].leaguename);\r\n      //console.log(\"myleagx\", joinedLeague);\r\n     // setButtonLeague(joinedLeague[0].leaguename);\r\n    for(let i=0; i < leagnameval.length; i++){\r\n    console.log(\"assdsqec\",leagnameval[i]);\r\n    const { data, error } = await supabase.from(\"selectedteam\").select().eq(\"teamname\",leagnameval[i]);\r\n    console.log(\"shfnvdcqefv\",data);\r\n    teamPlayersWithEmail = data.filter((teamPlayer) => {\r\n      if (teamPlayer.email && teamPlayer.email !== \"\") {\r\n        return true;\r\n      }\r\n      return false;\r\n    });\r\n  \r\n  console.log(\"shfnv\",teamPlayersWithEmail);\r\n    let teamGroupedByEmail = [];\r\n\r\n    if (teamPlayersWithEmail.length > 0) {\r\n\r\n      teamPlayersWithEmail.forEach((player) => {\r\n        let previousCount = teamGroupedByEmail[player.email]\r\n          ? teamGroupedByEmail[player.email].teamScore\r\n          : 0;\r\n\r\n        let count = previousCount + Number(player.pointsearend);\r\n\r\n        let team = {\r\n          teamName: player.username,\r\n          teamScore: count,\r\n        };\r\n        teamGroupedByEmail[player.email] = team;\r\n      });\r\n    }\r\n\r\n    let allKeys = Object.keys(teamGroupedByEmail);\r\n    \r\n    allKeys.forEach((key) => {\r\n      teams.push(teamGroupedByEmail[key]);\r\n    });\r\n\r\n      teams = teams.sort(compare).reverse();\r\n    }\r\n    setNersLeague(teams);\r\n    console.log(\"joinleg\",teams);\r\n  }\r\n    // console.log(\"buttom\",leaguebtn);\r\n    // if(leaguebtn === ''){\r\n\r\n    // }\r\n    // const { data, error } = await supabase.from(\"selectedteam\").select();\r\n    \r\n    // let teamPlayersWithEmail = data.filter((teamPlayer) => {\r\n    //   if (teamPlayer.email && teamPlayer.email !== \"\") {\r\n    //     return true;\r\n    //   }\r\n    //   return false;\r\n    // });\r\n\r\n    // let teamGroupedByEmail = [];\r\n\r\n    // if (teamPlayersWithEmail.length > 0) {\r\n    \r\n\r\n    //   teamPlayersWithEmail.forEach((player) => {\r\n    //     let previousCount = teamGroupedByEmail[player.email]\r\n    //       ? teamGroupedByEmail[player.email].teamScore\r\n    //       : 0;\r\n\r\n    //     let count = previousCount + Number(player.pointsearend);\r\n\r\n    //     let team = {\r\n    //       teamName: player.teamname,\r\n    //       teamScore: count,\r\n    //     };\r\n    //     console.log();\r\n    //     teamGroupedByEmail[player.email] = team;\r\n    //   });\r\n    // }\r\n\r\n\r\n    // let allKeys = Object.keys(teamGroupedByEmail);\r\n    // let teams = [];\r\n    // allKeys.forEach((key) => {\r\n    //   teams.push(teamGroupedByEmail[key]);\r\n    // });\r\n\r\n    // teams = teams.sort(compare).reverse();\r\n\r\n    // if (teams) {\r\n    //   const { data, error } = await supabase\r\n    //     .from(\"league\")\r\n    //     .select()\r\n    //     .match({email: email,type:'Private'});\r\n    //   let joinedLeague = data.map((joinedLeague) => {\r\n    //     return joinedLeague.leaguename;\r\n    //   });\r\n    //   var newData;\r\n\r\n    //   joinedLeague.forEach(async (element, index) => {\r\n    //     const { data } = await supabase\r\n    //       .from(\"league\")\r\n    //       .select()\r\n    //       .match({leaguename: element,type:'Private'});\r\n    \r\n    //   });\r\n\r\n    //   for (let i = 0; i < joinedLeague.length; i++) {\r\n    //     newData = [];\r\n    //     const { data, error } = await supabase\r\n    //       .from(\"league\")\r\n    //       .select()\r\n    //       .match({leaguename: joinedLeague[i],type:'Private'});\r\n          \r\n    //         setButtonLeague(data[0].leaguename);\r\n    //       nersLeague.push({\r\n    //         leagueName: joinedLeague[i],\r\n    //         teams: data.map((league) => league.teamname),\r\n    //         teamTotalScore: teams.teamScore,\r\n    //       });\r\n    //     } \r\n          \r\n    //  ;\r\n    //   var myFilerTeam = [];\r\n    //   var count;\r\n    //   nersLeague.map((myLeagueTeams, i) => {\r\n    //     count = 0;\r\n    //     myLeagueTeams.teams.forEach((team) => {\r\n    //       teams.filter((teams) => {\r\n    //         if (teams.teamName === team) {\r\n    //           count = count + Number(teams.teamScore);\r\n    //         }\r\n    //       });\r\n    //     });\r\n    //     nersLeague[i].teamTotalScore = count;\r\n    //   });\r\n    //    console.log(nersLeague);\r\n    //   nersLeague.sort(function (a, b) {\r\n    //     return b.teamTotalScore - a.teamTotalScore;\r\n    //   });\r\n    setLoadingNel(false);\r\n  };\r\n\r\n  // ------------------------------leader board button click-------------------------------\r\n  const viewAllGlobal = () => {\r\n    history.push({\r\n      pathname: \"/league-mgmt-screen/\",\r\n      state: {top3GlobalTeams, email, leaguebtn},\r\n    });\r\n  };\r\n\r\n  const viewAllNersLeague = () => {\r\n    console.log(\"leagdata\",nersLeague);\r\n    history.push({\r\n      pathname: \"/league-mgmt-screen-ners-league/\",\r\n      state: {nersLeague, email, nearTab},\r\n    });\r\n  };\r\n\r\n  const viewAllLeague5 = () => {\r\n    history.push({\r\n      pathname: \"/league-mgmt-screen-5league/\",\r\n      state: {joinedTeamOnLeague, email},\r\n    });\r\n  };\r\n  console.log(\"cnvmd\",Leaguenameval);\r\n  return (\r\n    <>\r\n     {loading ? (\r\n          <div className=\"loader-containersss\">\r\n            <div className=\"spinnerss\"></div>\r\n           \r\n          </div>\r\n        ) : (\r\n    <div className=\"landing-box\">\r\n      <h4 className=\"p-3 contenthadding\">Leaderboards</h4>\r\n      <div className=\"btn-container w-100\" style={{ marginBottom: '10px' }}>\r\n          <div className=\"rowscontents\">\r\n          <div className=\"leaguerow\" style ={{overflowX:'auto',overflowY:\"hidden\",scrollBehavior:'smooth'}}>\r\n          {leaguebtn &&(\r\n          <ul className=\"buttonsui\">\r\n            <li className=\"buttonli\">\r\n            <button \r\n\r\n              onClick={() => handleTabChange(\"global\")}\r\n              className={ \r\n                activeTab === \"global\" ? \"activebutton \" : \"Leaderboards-button \"\r\n              }\r\n            >\r\n              {leaguebtn}\r\n            </button>\r\n            </li>\r\n          </ul>\r\n          )}\r\n        \r\n         \r\n           \r\n            {Leaguenameval &&(\r\n            Leaguenameval.map((legnam,i) =>{\r\n              {console.log(\"cnvmd\",legnam);}\r\n              return(\r\n                <ul key={i}  className= 'buttonsui'>\r\n                  <li className=\"buttonli\">\r\n                  <button\r\n                onClick={() => handleTabnyarChange(legnam)}\r\n                className={\r\n                  activeTab === legnam ? \"activebutton\" : \"Leaderboards-button\"\r\n                }\r\n              >\r\n                {legnam}\r\n              </button>\r\n                  </li>\r\n                </ul>\r\n              )\r\n            }))}\r\n            </div>\r\n          </div>\r\n          \r\n        \r\n      \r\n          {/* <label>\r\n            <button\r\n              onClick={() => handleTabChange(\"fiveLeague\")}\r\n              className={ \r\n                activeTab === \"fiveLeague\"\r\n                  ? \"activebutton\"\r\n                  : \"Leaderboards-button\"\r\n              }\r\n            >\r\n              {Leaguename}\r\n            </button>\r\n          </label> */}\r\n        \r\n      </div>\r\n\r\n      {activeTab === \"global\" && (\r\n        <>\r\n          {loadinggolbl ? (\r\n          \r\n          <div className=\"spoilorloder\">\r\n            <div className=\"spinnerssun \"></div>\r\n          </div>\r\n          \r\n         \r\n        \r\n        ) : (<table className=\"table\">\r\n            <thead>\r\n              <tr className=\"border-btm\">\r\n                <th style={{ fontSize: 11, color: \"#757575\" }}>&nbsp;&nbsp;&nbsp;TEAM</th>\r\n                <th\r\n                  style={{\r\n                    fontSize: 11,\r\n                    color: \"#757575\",\r\n                    textAlign: \"right\",\r\n                    paddingRight: \"1%\",\r\n                  }}\r\n                >\r\n                  SCORED&nbsp;&nbsp;\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {top3GlobalTeams.length > 0 &&\r\n                top3GlobalTeams.map((team, i) => {\r\n                  if (i <= 2) {\r\n                    return (\r\n                      <tr key={i}>\r\n                        <td style={{ fontSize: 17 }}>\r\n                        &nbsp;&nbsp;&nbsp;{i + 1}. {team.teamName}\r\n                        </td>\r\n                        <td\r\n                          className=\"teamnameonbord\"\r\n                        >\r\n                          {team.teamScore}\r\n                          &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                        </td>\r\n                      </tr>\r\n                    );\r\n                  }\r\n                })}\r\n            </tbody>\r\n          </table>)}\r\n          <button className=\"landingbuttonlink\" onClick={viewAllGlobal}>\r\n            View All\r\n          </button>\r\n        </>\r\n      )}\r\n      {activeTab === nearTab && (\r\n        <>\r\n         {loadingnel? (\r\n          \r\n            <div className=\"spoilorloder\">\r\n              <div className=\"spinnerssun \"></div>\r\n            </div>\r\n            \r\n           \r\n          \r\n          ) : (<table className=\"table\">\r\n            <thead>\r\n              <tr className=\"border-btm\">\r\n                <th style={{ fontSize: 11, color: \"#757575\" }}>&nbsp;&nbsp;&nbsp;TEAM</th>\r\n                <th\r\n                  style={{\r\n                    fontSize: 11,\r\n                    color: \"#757575\",\r\n                    textAlign: \"right\",\r\n                    paddingRight: \"1%\",\r\n                  }}\r\n                >\r\n                  SCORED&nbsp;&nbsp;\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {nersLeague &&\r\n                nersLeague.map((league, i) => {\r\n                  if (i <= 2) {\r\n                    return (\r\n                      <tr key={i}>\r\n                        <td style={{ fontSize: 17 }}>\r\n                        &nbsp;&nbsp;&nbsp;{i + 1}. {league.teamName}\r\n                        </td>\r\n                        <td\r\n                          style={{\r\n                            fontsize: 13,\r\n                            color: \"#E5007D\",\r\n                            textAlign: \"right\",\r\n                            paddingRight: \"2%\",\r\n                          }}\r\n                        >\r\n                          {league.teamScore}\r\n                          &nbsp;&nbsp;&nbsp;\r\n                        </td>\r\n                      </tr>\r\n                    );\r\n                  }\r\n                })}\r\n            </tbody>\r\n          </table>)}\r\n          <button className=\"landingbuttonlink\" onClick={viewAllNersLeague}>\r\n            View All\r\n          </button>\r\n        </>\r\n      )}\r\n      {activeTab === \"fiveLeague\" && (\r\n        <>\r\n          <table className=\"table\">\r\n            <thead>\r\n              <tr className=\"border-btm\">\r\n                <th style={{ fontSize: 11, color: \"#757575\" }}>&nbsp;&nbsp;&nbsp;LEAGUE</th>\r\n                <th\r\n                  style={{\r\n                    fontSize: 11,\r\n                    color: \"#757575\",\r\n                    textAlign: \"right\",\r\n                    paddingRight: \"1%\",\r\n                  }}\r\n                >\r\n                  SCORED&nbsp;&nbsp;\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {joinedTeamOnLeague &&\r\n                joinedTeamOnLeague.map((league, i) => {\r\n                  if (i <= 4) {\r\n                    return (\r\n                      <tr key={i}>\r\n                        <td style={{ fontSize: 17 }}>\r\n                          &nbsp;&nbsp;&nbsp;{i + 1}. {league.leagueName}\r\n                        </td>\r\n                        <td\r\n                          style={{\r\n                            fontsize: 13,\r\n                            color: \"#E5007D\",\r\n                            textAlign: \"right\",\r\n                            paddingRight: \"2%\",\r\n                          }}\r\n                        >\r\n                          {league.totalPoints}\r\n                          &nbsp;&nbsp;&nbsp;&nbsp;\r\n                        </td>\r\n                      </tr>\r\n                    );\r\n                  }\r\n                })}\r\n            </tbody>\r\n          </table>\r\n          <button className=\"landingbuttonlink\" onClick={viewAllLeague5}>\r\n            View All\r\n          </button>\r\n        </>\r\n      )}\r\n    </div>)}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Leaderboards;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}