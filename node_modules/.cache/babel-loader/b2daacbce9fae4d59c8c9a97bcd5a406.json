{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport { _generateLinkResponse, _request, _userResponse } from './lib/fetch';\nimport { resolveFetch } from './lib/helpers';\nimport { isAuthError } from './lib/errors';\nexport default class GoTrueAdminApi {\n  constructor(_ref) {\n    let {\n      url = '',\n      headers = {},\n      fetch\n    } = _ref;\n    this.url = url;\n    this.headers = headers;\n    this.fetch = resolveFetch(fetch);\n  }\n  /**\n   * Removes a logged-in session.\n   * @param jwt A valid, logged-in JWT.\n   */\n\n\n  signOut(jwt) {\n    return __awaiter(this, void 0, void 0, function* () {\n      try {\n        yield _request(this.fetch, 'POST', `${this.url}/logout`, {\n          headers: this.headers,\n          jwt,\n          noResolveJson: true\n        });\n        return {\n          error: null\n        };\n      } catch (error) {\n        if (isAuthError(error)) {\n          return {\n            error\n          };\n        }\n\n        throw error;\n      }\n    });\n  }\n  /**\n   * Sends an invite link to an email address.\n   * @param email The email address of the user.\n   * @param options.redirectTo A URL or mobile deeplink to send the user to after they are confirmed.\n   * @param options.data Optional user metadata\n   */\n\n\n  inviteUserByEmail(email) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return __awaiter(this, void 0, void 0, function* () {\n      try {\n        return yield _request(this.fetch, 'POST', `${this.url}/invite`, {\n          body: {\n            email,\n            data: options.data\n          },\n          headers: this.headers,\n          redirectTo: options.redirectTo,\n          xform: _userResponse\n        });\n      } catch (error) {\n        if (isAuthError(error)) {\n          return {\n            data: {\n              user: null\n            },\n            error\n          };\n        }\n\n        throw error;\n      }\n    });\n  }\n  /**\n   * Generates email links and OTPs to be sent via a custom email provider.\n   * @param email The user's email.\n   * @param options.password User password. For signup only.\n   * @param options.data Optional user metadata. For signup only.\n   * @param options.redirectTo The redirect url which should be appended to the generated link\n   */\n\n\n  generateLink(params) {\n    return __awaiter(this, void 0, void 0, function* () {\n      try {\n        const {\n          options\n        } = params,\n              rest = __rest(params, [\"options\"]);\n\n        const body = Object.assign(Object.assign({}, rest), options);\n\n        if ('newEmail' in rest) {\n          // replace newEmail with new_email in request body\n          body.new_email = rest === null || rest === void 0 ? void 0 : rest.newEmail;\n          delete body['newEmail'];\n        }\n\n        return yield _request(this.fetch, 'POST', `${this.url}/admin/generate_link`, {\n          body: body,\n          headers: this.headers,\n          xform: _generateLinkResponse,\n          redirectTo: options === null || options === void 0 ? void 0 : options.redirectTo\n        });\n      } catch (error) {\n        if (isAuthError(error)) {\n          return {\n            data: {\n              properties: null,\n              user: null\n            },\n            error\n          };\n        }\n\n        throw error;\n      }\n    });\n  } // User Admin API\n\n  /**\n   * Creates a new user.\n   * This function should only be called on a server. Never expose your `service_role` key in the browser.\n   */\n\n\n  createUser(attributes) {\n    return __awaiter(this, void 0, void 0, function* () {\n      try {\n        return yield _request(this.fetch, 'POST', `${this.url}/admin/users`, {\n          body: attributes,\n          headers: this.headers,\n          xform: _userResponse\n        });\n      } catch (error) {\n        if (isAuthError(error)) {\n          return {\n            data: {\n              user: null\n            },\n            error\n          };\n        }\n\n        throw error;\n      }\n    });\n  }\n  /**\n   * Get a list of users.\n   *\n   * This function should only be called on a server. Never expose your `service_role` key in the browser.\n   */\n\n\n  listUsers() {\n    return __awaiter(this, void 0, void 0, function* () {\n      try {\n        const {\n          data,\n          error\n        } = yield _request(this.fetch, 'GET', `${this.url}/admin/users`, {\n          headers: this.headers\n        });\n        if (error) throw error;\n        return {\n          data: Object.assign({}, data),\n          error: null\n        };\n      } catch (error) {\n        if (isAuthError(error)) {\n          return {\n            data: {\n              users: []\n            },\n            error\n          };\n        }\n\n        throw error;\n      }\n    });\n  }\n  /**\n   * Get user by id.\n   *\n   * @param uid The user's unique identifier\n   *\n   * This function should only be called on a server. Never expose your `service_role` key in the browser.\n   */\n\n\n  getUserById(uid) {\n    return __awaiter(this, void 0, void 0, function* () {\n      try {\n        return yield _request(this.fetch, 'GET', `${this.url}/admin/users/${uid}`, {\n          headers: this.headers,\n          xform: _userResponse\n        });\n      } catch (error) {\n        if (isAuthError(error)) {\n          return {\n            data: {\n              user: null\n            },\n            error\n          };\n        }\n\n        throw error;\n      }\n    });\n  }\n  /**\n   * Updates the user data.\n   *\n   * @param attributes The data you want to update.\n   *\n   * This function should only be called on a server. Never expose your `service_role` key in the browser.\n   */\n\n\n  updateUserById(uid, attributes) {\n    return __awaiter(this, void 0, void 0, function* () {\n      try {\n        return yield _request(this.fetch, 'PUT', `${this.url}/admin/users/${uid}`, {\n          body: attributes,\n          headers: this.headers,\n          xform: _userResponse\n        });\n      } catch (error) {\n        if (isAuthError(error)) {\n          return {\n            data: {\n              user: null\n            },\n            error\n          };\n        }\n\n        throw error;\n      }\n    });\n  }\n  /**\n   * Delete a user. Requires a `service_role` key.\n   *\n   * @param id The user id you want to remove.\n   *\n   * This function should only be called on a server. Never expose your `service_role` key in the browser.\n   */\n\n\n  deleteUser(id) {\n    return __awaiter(this, void 0, void 0, function* () {\n      try {\n        return yield _request(this.fetch, 'DELETE', `${this.url}/admin/users/${id}`, {\n          headers: this.headers,\n          xform: _userResponse\n        });\n      } catch (error) {\n        if (isAuthError(error)) {\n          return {\n            data: {\n              user: null\n            },\n            error\n          };\n        }\n\n        throw error;\n      }\n    });\n  }\n\n}","map":{"version":3,"mappings":"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","names":["_generateLinkResponse","_request","_userResponse","resolveFetch","isAuthError","GoTrueAdminApi","constructor","url","headers","fetch","signOut","jwt","noResolveJson","error","inviteUserByEmail","email","options","body","data","redirectTo","xform","user","generateLink","params","rest","new_email","newEmail","properties","createUser","attributes","listUsers","users","getUserById","uid","updateUserById","deleteUser","id"],"sourceRoot":"","sources":["../../src/GoTrueAdminApi.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}