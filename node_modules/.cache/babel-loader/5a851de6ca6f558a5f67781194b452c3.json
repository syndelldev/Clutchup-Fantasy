{"ast":null,"code":"var _jsxFileName = \"D:\\\\Clutchup-Fantasy\\\\Clutchup-Fantasy\\\\src\\\\components\\\\pages\\\\CreateLeague.js\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./Style.css\";\nimport BackgroundImage from \"../../images/Left.png\";\nimport logoimages from \"../../images/logo_1.png\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport Visibility from \"@material-ui/icons/VisibilityOffOutlined\";\nimport VisibilityOff from \"@material-ui/icons/VisibilityOutlined\";\nimport { supabase } from \"../../supabaseClient\";\nimport { format } from 'date-fns';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nexport default function () {\n  let lagname;\n  const history = useHistory();\n  const location = useLocation();\n  const [loading, setLoading] = useState(false);\n  console.log(location);\n  const [LeagueName, setLeagueName] = useState(\"\");\n  const [allradyLink, setallradyLink] = useState(false);\n  const [blankinput, setBlankinput] = useState(false);\n  const [teamCodelength, setTeamCodelength] = useState(false);\n  const [alreadyexists, setAlreadyexists] = useState(false);\n  const [Leagenames, setLeagenames] = useState(\"\");\n  const [teamCode, setTeamCode] = useState(\"\");\n  const [Startdate, setStartDate] = useState(\"\");\n  const [enddate, setEndDate] = useState(\"\");\n  const [currentdate, setCurrentDate] = useState(\"\");\n  const email = location.state;\n  console.log(email);\n\n  const getLeagueName = async e => {\n    const {\n      value\n    } = e.target.value;\n    setLeagueName(e.target.value);\n  };\n\n  useEffect(() => {\n    setLoading(true);\n    setTimeout(() => {\n      setLoading(false);\n    }, 1000);\n  }, []);\n  useEffect(() => {\n    getCurrentDate();\n  }, []);\n\n  const addWeeksToDate = (dateObj, numberOfWeeks) => {\n    dateObj.setDate(dateObj.getDate() + numberOfWeeks * 7);\n    return dateObj;\n  }; // ======================= date & time =========================\n\n\n  const getCurrentDate = () => {\n    const numWeeks = 1;\n    console.log(\"newdate\", addWeeksToDate(new Date(), numWeeks));\n    var today = new Date();\n    var enddatava = format(addWeeksToDate(new Date(), numWeeks), 'MM/dd/yyyy h:mm aa');\n    console.log(format(today, 'MM/dd/yyyy h:mm aa'));\n    console.log(today);\n    console.log(\"enddate\", enddatava); //var formatedataval = new Intl.DateTimeFormat('en-US', {year: 'numeric', month: '2-digit',day: '2-digit', hour: '2-digit', minute: '2-digit'}).format(today);\n    //format(today, 'dd/mm/yyyy, --:-- --')\n    //today.toISOString();\n\n    console.log(today);\n    setStartDate(format(today, 'MM/dd/yyyy h:mm aa'));\n    setEndDate(enddatava); // var date = new Date().getDate();\n    // var month = new Date().getMonth();\n    // var yers = new Date().getFullYear();\n    // return date + \" \" + MONTHS[month] + \",\" + yers;\n  }; // ------------------------------------- password show & hide ---------------------------\n\n\n  const [values, setValues] = React.useState({\n    password: \"\",\n    showPassword: false\n  });\n\n  const passwordhandleClickShowPassword = () => {\n    setValues({ ...values,\n      showPassword: !values.showPassword\n    });\n  };\n\n  const handleMouseDownPassword = event => {\n    event.preventDefault();\n  };\n\n  const handleTeamcode = async e => {\n    const {\n      value\n    } = e.target.value;\n    setTeamCode(e.target.value);\n  };\n\n  const handlestartdate = async date => {\n    const {\n      value\n    } = date;\n    setStartDate(date);\n  };\n\n  const handleenddate = async date => {\n    const {\n      value\n    } = date;\n    setEndDate(date);\n  };\n\n  const CreateLeague = async () => {\n    // -------------------------------------validation of league name-----------------------------------------\n    if (LeagueName.trim().length === 0 && teamCode.trim().length === 0) {\n      setBlankinput(true);\n    } else {\n      setBlankinput(false);\n\n      if (teamCode.length <= 4) {\n        setTeamCodelength(true);\n      } else {\n        setTeamCodelength(false);\n\n        if (LeagueName && teamCode) {\n          const {\n            data,\n            error\n          } = await supabase.from(\"createnewleague\").select(\"leaguename\").filter(\"leaguename\", \"eq\", LeagueName);\n          console.log(data); //lagname = data[0].leaguename;\n          //setLeagenames(lagname);\n\n          if (data.length !== 0) {\n            setAlreadyexists(true);\n          } else {\n            setAlreadyexists(false);\n            const {\n              data,\n              error\n            } = await supabase.from(\"user\").select().eq(\"email\", email);\n            console.log(data);\n            var teamName = data[0].teamname;\n            var teamusername = data[0].teamusername;\n\n            if (data.length !== 0) {\n              console.log(\"startdate\", Startdate);\n              console.log(\"enddate\", enddate); //setAlreadyexists(false);\n\n              const {\n                data,\n                error\n              } = await supabase.from(\"createnewleague\").insert({\n                teamname: teamName,\n                teamusername: teamusername,\n                leaguename: LeagueName,\n                leaguecode: teamCode.toLowerCase(),\n                leaguestartdate: Startdate,\n                leagueenaddate: enddate,\n                email: email\n              }).select();\n              console.log(error); //var teamName = data[0].teamname;\n\n              const {\n                data1,\n                erro1\n              } = await supabase.from(\"league\").insert({\n                leaguename: LeagueName,\n                teamcode: teamCode.toLowerCase(),\n                email: email,\n                teamname: teamName,\n                type: 'Private'\n              });\n              console.log(\"dfds\", teamName);\n              const teamCodeAndName = {\n                teamCode: teamCode.toLowerCase(),\n                LeagueName: LeagueName,\n                email: email\n              }; // const { insertData, inserterror } = await supabase\n              //   .from(\"league\")\n              //   .insert({\n              //     leaguename: LeagueName,\n              //     teamcode: teamCode.toLowerCase(),\n              //     email: email,\n              //     teamname: teamName,\n              //   });\n              // console.log(inserterror);\n              // console.log(insertData);\n\n              history.push({\n                pathname: \"/create-league-successful/\",\n                state: teamCodeAndName\n              }); // alert(\"This league name already exists please try different League Names\");\n            }\n          }\n        }\n      }\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 5\n    }\n  }, loading ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"loader-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"spinner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 11\n    }\n  }, \" \"), /*#__PURE__*/React.createElement(\"img\", {\n    src: logoimages,\n    style: {\n      width: 100,\n      height: 100\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 11\n    }\n  })) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col1 \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: BackgroundImage,\n    className: \"mainimg\",\n    alt: \"back-image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"contener\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: logoimages,\n    className: \"logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"hading mt-0 h-50\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 17\n    }\n  }, \"Create League\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-outline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"user-input-wrp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: getLeagueName,\n    type: \"text\",\n    className: \"inputText\",\n    maxLength: \"20\",\n    required: true,\n    autoSave: \"off\",\n    autoComplete: \"off\",\n    \"aria-autocomplete\": \"off\",\n    autoFocus: \"off\",\n    autocorrect: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"floating-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 21\n    }\n  }, \"League Name\"), blankinput && /*#__PURE__*/React.createElement(\"small\", {\n    className: \"d-block mb-2 red errors\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 23\n    }\n  }, \"Please Enter League name.\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"user-input-wrp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: values.showPassword ? \"text\" : \"password\",\n    onChange: handleTeamcode,\n    maxLength: \"30\",\n    required: true,\n    autoSave: \"off\",\n    autoComplete: \"none\",\n    \"aria-autocomplete\": \"off\",\n    autoFocus: \"off\",\n    autocorrect: \"off\",\n    className: \"inputText\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: \"25\",\n    height: \"20\",\n    color: \"#757575\",\n    className: \"bi bi-eye\",\n    onClick: passwordhandleClickShowPassword,\n    onMouseDown: handleMouseDownPassword,\n    \"aria-hidden\": \"true\",\n    viewBox: \"0 0 16 16\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 21\n    }\n  }, values.showPassword ? /*#__PURE__*/React.createElement(Visibility, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 46\n    }\n  }) : /*#__PURE__*/React.createElement(VisibilityOff, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 63\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"floating-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 21\n    }\n  }, \"League code\"), blankinput && /*#__PURE__*/React.createElement(\"small\", {\n    className: \"d-block mb-2 red errors\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 23\n    }\n  }, \"Please Enter League code.\"), allradyLink && /*#__PURE__*/React.createElement(\"small\", {\n    className: \"d-block mb-2 red errors\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 23\n    }\n  }, \"You already created League name \", Leagenames), teamCodelength && /*#__PURE__*/React.createElement(\"small\", {\n    className: \"d-block mb-2 red errors\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 23\n    }\n  }, \"Minimum 5 characters required.\"), alreadyexists && /*#__PURE__*/React.createElement(\"small\", {\n    className: \"d-block mb-2 red errors\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 23\n    }\n  }, \"League name already exists please try different League Names.\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"button\",\n    onClick: CreateLeague,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 19\n    }\n  }, \"Create\")))))));\n}","map":{"version":3,"names":["React","useState","useEffect","BackgroundImage","logoimages","useHistory","useLocation","Visibility","VisibilityOff","supabase","format","DatePicker","lagname","history","location","loading","setLoading","console","log","LeagueName","setLeagueName","allradyLink","setallradyLink","blankinput","setBlankinput","teamCodelength","setTeamCodelength","alreadyexists","setAlreadyexists","Leagenames","setLeagenames","teamCode","setTeamCode","Startdate","setStartDate","enddate","setEndDate","currentdate","setCurrentDate","email","state","getLeagueName","e","value","target","setTimeout","getCurrentDate","addWeeksToDate","dateObj","numberOfWeeks","setDate","getDate","numWeeks","Date","today","enddatava","values","setValues","password","showPassword","passwordhandleClickShowPassword","handleMouseDownPassword","event","preventDefault","handleTeamcode","handlestartdate","date","handleenddate","CreateLeague","trim","length","data","error","from","select","filter","eq","teamName","teamname","teamusername","insert","leaguename","leaguecode","toLowerCase","leaguestartdate","leagueenaddate","data1","erro1","teamcode","type","teamCodeAndName","push","pathname","width","height"],"sources":["D:/Clutchup-Fantasy/Clutchup-Fantasy/src/components/pages/CreateLeague.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./Style.css\";\r\nimport BackgroundImage from \"../../images/Left.png\";\r\nimport logoimages from \"../../images/logo_1.png\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport Visibility from \"@material-ui/icons/VisibilityOffOutlined\";\r\nimport VisibilityOff from \"@material-ui/icons/VisibilityOutlined\";\r\nimport { supabase } from \"../../supabaseClient\";\r\nimport { format } from 'date-fns';\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nexport default function () {\r\n  let lagname;\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const [loading, setLoading] = useState(false);\r\n  console.log(location);\r\n  const [LeagueName, setLeagueName] = useState(\"\");\r\n  const [allradyLink, setallradyLink] = useState(false);\r\n  const [blankinput, setBlankinput] = useState(false);\r\n  const [teamCodelength, setTeamCodelength] = useState(false);\r\n  const [alreadyexists, setAlreadyexists] = useState(false);\r\n  const [Leagenames, setLeagenames] = useState(\"\");\r\n  const [teamCode, setTeamCode] = useState(\"\");\r\n  const [Startdate, setStartDate] = useState(\"\");\r\n  const [enddate, setEndDate] = useState(\"\");\r\n  const [currentdate, setCurrentDate] = useState(\"\");\r\n  const email = location.state;\r\n  \r\n  console.log(email);\r\n  const getLeagueName = async (e) => {\r\n    const { value } = e.target.value;\r\n    setLeagueName(e.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    setTimeout(() => {\r\n      setLoading(false);\r\n    }, 1000);\r\n  }, []);\r\n  useEffect(() => {\r\n    getCurrentDate();\r\n  }, []);\r\n  const addWeeksToDate = (dateObj,numberOfWeeks) => {\r\n    dateObj.setDate(dateObj.getDate()+ numberOfWeeks * 7);\r\n    return dateObj;\r\n  }\r\n    // ======================= date & time =========================\r\n    const getCurrentDate = () => {\r\n      const numWeeks = 1;\r\nconsole.log(\"newdate\",addWeeksToDate(new Date(), numWeeks));\r\n\r\n      var today = new Date();\r\n      var enddatava =format(addWeeksToDate(new Date(), numWeeks), 'MM/dd/yyyy h:mm aa');\r\n      console.log(format(today, 'MM/dd/yyyy h:mm aa'));\r\n      console.log(today);\r\n      console.log(\"enddate\",enddatava);\r\n      //var formatedataval = new Intl.DateTimeFormat('en-US', {year: 'numeric', month: '2-digit',day: '2-digit', hour: '2-digit', minute: '2-digit'}).format(today);\r\n      //format(today, 'dd/mm/yyyy, --:-- --')\r\n      //today.toISOString();\r\n      console.log(today);\r\n      setStartDate(format(today, 'MM/dd/yyyy h:mm aa'));\r\n      setEndDate(enddatava);\r\n      // var date = new Date().getDate();\r\n      // var month = new Date().getMonth();\r\n      // var yers = new Date().getFullYear();\r\n  \r\n      // return date + \" \" + MONTHS[month] + \",\" + yers;\r\n    };\r\n  \r\n  // ------------------------------------- password show & hide ---------------------------\r\n  const [values, setValues] = React.useState({\r\n    password: \"\",\r\n    showPassword: false,\r\n  });\r\n  const passwordhandleClickShowPassword = () => {\r\n    setValues({ ...values, showPassword: !values.showPassword });\r\n  };\r\n\r\n  const handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  const handleTeamcode = async (e) => {\r\n    const { value } = e.target.value;\r\n    setTeamCode(e.target.value);\r\n  };\r\n  const handlestartdate = async (date) => {\r\n    const { value } = date;\r\n    setStartDate(date);\r\n  };\r\n  const handleenddate = async (date) => {\r\n    const { value } = date;\r\n    setEndDate(date);\r\n  };\r\n\r\n\r\n  const CreateLeague = async () => {\r\n    // -------------------------------------validation of league name-----------------------------------------\r\n    if (LeagueName.trim().length === 0 && teamCode.trim().length === 0) {\r\n      setBlankinput(true);\r\n    } else {\r\n      setBlankinput(false);\r\n      if (teamCode.length <= 4) {\r\n        setTeamCodelength(true);\r\n      } else {\r\n        setTeamCodelength(false);\r\n      if (LeagueName && teamCode) {\r\n        const { data, error } = await supabase\r\n          .from(\"createnewleague\")\r\n          .select(\"leaguename\")\r\n          .filter(\"leaguename\", \"eq\", LeagueName);\r\n        console.log(data);\r\n        //lagname = data[0].leaguename;\r\n        //setLeagenames(lagname);\r\n        if (data.length !== 0) {\r\n          setAlreadyexists(true);\r\n        } else {\r\n          setAlreadyexists(false);\r\n          const { data, error } = await supabase\r\n            .from(\"user\")\r\n            .select()\r\n            .eq(\"email\",email);\r\n          console.log(data);\r\n          var teamName = data[0].teamname;\r\n          var teamusername = data[0].teamusername;\r\n          if (data.length !== 0) {\r\n            console.log(\"startdate\",Startdate);\r\n            console.log(\"enddate\",enddate);\r\n            \r\n            //setAlreadyexists(false);\r\n            const { data, error } = await supabase\r\n              .from(\"createnewleague\")\r\n              .insert({\r\n                teamname: teamName,\r\n                teamusername: teamusername,\r\n                leaguename : LeagueName,\r\n                leaguecode : teamCode.toLowerCase(),\r\n                leaguestartdate : Startdate,\r\n                leagueenaddate : enddate,\r\n                email : email\r\n              }).select();\r\n            console.log(error);\r\n\r\n            //var teamName = data[0].teamname;\r\n          const { data1, erro1 } = await supabase.from(\"league\").insert({\r\n            leaguename: LeagueName,\r\n            teamcode: teamCode.toLowerCase(),\r\n            email: email,\r\n            teamname: teamName,\r\n            type:'Private',\r\n          });\r\n            console.log(\"dfds\", teamName);\r\n            const teamCodeAndName = {\r\n              teamCode: teamCode.toLowerCase(),\r\n              LeagueName: LeagueName,\r\n              email : email,\r\n            };\r\n\r\n            // const { insertData, inserterror } = await supabase\r\n            //   .from(\"league\")\r\n            //   .insert({\r\n            //     leaguename: LeagueName,\r\n            //     teamcode: teamCode.toLowerCase(),\r\n            //     email: email,\r\n            //     teamname: teamName,\r\n            //   });\r\n            // console.log(inserterror);\r\n            // console.log(insertData);\r\n            history.push({\r\n              pathname: \"/create-league-successful/\",\r\n              state: teamCodeAndName,\r\n            });\r\n            // alert(\"This league name already exists please try different League Names\");\r\n          }\r\n        }\r\n      }}\r\n      }\r\n  };\r\n\r\n  return (\r\n    <div className=\"section\">\r\n      {loading ? (\r\n        <div className=\"loader-container\">\r\n          <div className=\"spinner\"> </div>\r\n          <img src={logoimages} style={{ width: 100, height: 100 }} />\r\n        </div>\r\n      ) : (\r\n        <div className=\"Row\">\r\n          <div className=\"col1 \">\r\n            <img src={BackgroundImage} className=\"mainimg\" alt=\"back-image\" />\r\n          </div>\r\n          <div className=\"col\">\r\n            <div className=\"contener\">\r\n              <div className=\"d-box\">\r\n                <img src={logoimages} className=\"logo\" />\r\n                <h3 className=\"hading mt-0 h-50\">Create League</h3>\r\n                <div className=\"form-outline\">\r\n                  <div className=\"user-input-wrp\">\r\n                    <br />\r\n                    <input\r\n                      onChange={getLeagueName}\r\n                      type=\"text\"\r\n                      className=\"inputText\"\r\n                      maxLength=\"20\"\r\n                      required\r\n                      autoSave=\"off\"\r\n                      autoComplete=\"off\"\r\n                      aria-autocomplete=\"off\"\r\n                      autoFocus=\"off\"\r\n                      autocorrect=\"off\"\r\n                    />\r\n                    <span className=\"floating-label\">League Name</span>\r\n                    {blankinput && (\r\n                      <small className=\"d-block mb-2 red errors\">\r\n                        Please Enter League name.\r\n                      </small>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"user-input-wrp\">\r\n                    <br />\r\n                    <input\r\n                      type={values.showPassword ? \"text\" : \"password\"}\r\n                      onChange={handleTeamcode}\r\n                      maxLength=\"30\"\r\n                      required\r\n                      autoSave=\"off\"\r\n                      autoComplete=\"none\"\r\n                      aria-autocomplete=\"off\"\r\n                      autoFocus=\"off\"\r\n                      autocorrect=\"off\"\r\n                      className=\"inputText\"\r\n                      \r\n                    />\r\n                    <svg\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                      width=\"25\"\r\n                      height=\"20\"\r\n                      color=\"#757575\"\r\n                      className=\"bi bi-eye\"\r\n                      onClick={passwordhandleClickShowPassword}\r\n                      onMouseDown={handleMouseDownPassword}\r\n                      aria-hidden=\"true\"\r\n                      viewBox=\"0 0 16 16\"\r\n                    >\r\n                      {values.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                    </svg>\r\n                    <span className=\"floating-label\">League code</span>\r\n                    {blankinput && (\r\n                      <small className=\"d-block mb-2 red errors\">\r\n                        Please Enter League code.\r\n                      </small>\r\n                    )}\r\n                    {allradyLink && (\r\n                      <small className=\"d-block mb-2 red errors\">\r\n                        You already created League name {Leagenames}\r\n                      </small>\r\n                    )}\r\n                    {teamCodelength && (\r\n                      <small className=\"d-block mb-2 red errors\">\r\n                        Minimum 5 characters required.\r\n                      </small>\r\n                    )}\r\n                    {alreadyexists && (\r\n                      <small className=\"d-block mb-2 red errors\">\r\n                        League name already exists please try different League\r\n                        Names.\r\n                      </small>\r\n                    )}\r\n\r\n                  </div>\r\n                  {/* <div className=\"lableintext\">\r\n                   <label >Start date</label> \r\n                  <DatePicker className=\"dateinputs\" selected={Startdate} minDate={new Date()} showTimeSelect\r\n              timeFormat=\"HH:mm\"\r\n              timeIntervals={20}\r\n              timeCaption=\"time\"\r\n              dateFormat=\"dd/MM/yyyy h:mm aa\"\r\n               onSelect={handlestartdate} onChange={handlestartdate} />\r\n                  </div> */}\r\n                \r\n                  {/* <div className=\"lableintext\">\r\n                   <label >End date</label> \r\n                  <DatePicker className=\"dateinputs\" selected={enddate} minDate={Startdate} showTimeSelect\r\n              timeFormat=\"HH:mm\"\r\n              timeIntervals={20}\r\n              timeCaption=\"time\"\r\n              dateFormat=\"dd/MM/yyyy h:mm aa\"\r\n               onSelect={handleenddate} onChange={handleenddate} />\r\n                  </div> */}\r\n                </div>\r\n                <div className=\"btn2\">\r\n                  <button className=\"button\" onClick={CreateLeague}>\r\n                    Create\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}